; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\ov2640.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\ov2640.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\SPI -I..\HARDWARE\MMC_SD -I..\HARDWARE\SPI -I..\HARDWARE\LED -I..\HARDWARE\WNOTEPAD -I..\HARDWARE\RTC -I..\FATFS -I..\FATFS\option -I..\HARDWARE\USART3 -I..\APPS -I..\HARDWARE\OV2640 -I..\HARDWARE\24LC1024 -I..\HARDWARE\RAM -I.\RTE\_Target_1 -ID:\EmbeddedTools\MDK51_RAM\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\EmbeddedTools\MDK51_RAM\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\ov2640.crf ..\HARDWARE\OV2640\ov2640.c]
                          THUMB

                          AREA ||i.OV2640_Auto_Exposure||, CODE, READONLY, ALIGN=2

                  OV2640_Auto_Exposure PROC
;;;141    //level:0~4
;;;142    void OV2640_Auto_Exposure(u8 level)
000000  b570              PUSH     {r4-r6,lr}
;;;143    {
;;;144        u8 i;
;;;145        u8 *p=(u8*)OV2640_AUTOEXPOSURE_LEVEL[level];
000002  4908              LDR      r1,|L1.36|
;;;146        for(i=0; i<4; i++) {
000004  2400              MOVS     r4,#0
000006  eb0105c0          ADD      r5,r1,r0,LSL #3       ;145
                  |L1.10|
;;;147            SCCB_WR_Reg(p[i*2],p[i*2+1]);
00000a  eb050044          ADD      r0,r5,r4,LSL #1
00000e  7841              LDRB     r1,[r0,#1]
000010  f8150014          LDRB     r0,[r5,r4,LSL #1]
000014  f7fffffe          BL       SCCB_WR_Reg
000018  1c64              ADDS     r4,r4,#1
00001a  b2e4              UXTB     r4,r4                 ;146
00001c  2c04              CMP      r4,#4                 ;146
00001e  d3f4              BCC      |L1.10|
;;;148        }
;;;149    }
000020  bd70              POP      {r4-r6,pc}
;;;150    //白平衡设置
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      ||.constdata||+0x19e

                          AREA ||i.OV2640_Brightness||, CODE, READONLY, ALIGN=1

                  OV2640_Brightness PROC
;;;209    //4,(0X40)+2
;;;210    void OV2640_Brightness(u8 bright)
000000  b510              PUSH     {r4,lr}
;;;211    {
000002  4604              MOV      r4,r0
;;;212        SCCB_WR_Reg(0xff, 0x00);
000004  2100              MOVS     r1,#0
000006  20ff              MOVS     r0,#0xff
000008  f7fffffe          BL       SCCB_WR_Reg
;;;213        SCCB_WR_Reg(0x7c, 0x00);
00000c  2100              MOVS     r1,#0
00000e  207c              MOVS     r0,#0x7c
000010  f7fffffe          BL       SCCB_WR_Reg
;;;214        SCCB_WR_Reg(0x7d, 0x04);
000014  2104              MOVS     r1,#4
000016  207d              MOVS     r0,#0x7d
000018  f7fffffe          BL       SCCB_WR_Reg
;;;215        SCCB_WR_Reg(0x7c, 0x09);
00001c  2109              MOVS     r1,#9
00001e  207c              MOVS     r0,#0x7c
000020  f7fffffe          BL       SCCB_WR_Reg
;;;216        SCCB_WR_Reg(0x7d, bright<<4);
000024  0720              LSLS     r0,r4,#28
000026  0e01              LSRS     r1,r0,#24
000028  207d              MOVS     r0,#0x7d
00002a  f7fffffe          BL       SCCB_WR_Reg
;;;217        SCCB_WR_Reg(0x7d, 0x00);
00002e  2100              MOVS     r1,#0
000030  e8bd4010          POP      {r4,lr}
000034  207d              MOVS     r0,#0x7d
000036  f7ffbffe          B.W      SCCB_WR_Reg
;;;218    }
;;;219    //对比度设置
                          ENDP


                          AREA ||i.OV2640_Color_Bar||, CODE, READONLY, ALIGN=1

                  OV2640_Color_Bar PROC
;;;307    //   1,开启彩条(注意OV2640的彩条是叠加在图像上面的)
;;;308    void OV2640_Color_Bar(u8 sw)
000000  b510              PUSH     {r4,lr}
;;;309    {
000002  4604              MOV      r4,r0
;;;310        u8 reg;
;;;311        SCCB_WR_Reg(0XFF,0X01);
000004  2101              MOVS     r1,#1
000006  20ff              MOVS     r0,#0xff
000008  f7fffffe          BL       SCCB_WR_Reg
;;;312        reg=SCCB_RD_Reg(0X12);
00000c  2012              MOVS     r0,#0x12
00000e  f7fffffe          BL       SCCB_RD_Reg
;;;313        reg&=~(1<<1);
000012  f0200102          BIC      r1,r0,#2
;;;314        if(sw)reg|=1<<1;
000016  b10c              CBZ      r4,|L3.28|
000018  f0410102          ORR      r1,r1,#2
                  |L3.28|
;;;315        SCCB_WR_Reg(0X12,reg);
00001c  e8bd4010          POP      {r4,lr}
000020  2012              MOVS     r0,#0x12
000022  f7ffbffe          B.W      SCCB_WR_Reg
;;;316    }
;;;317    //设置传感器输出窗口
                          ENDP


                          AREA ||i.OV2640_Color_Saturation||, CODE, READONLY, ALIGN=1

                  OV2640_Color_Saturation PROC
;;;193    //4,+2
;;;194    void OV2640_Color_Saturation(u8 sat)
000000  0100              LSLS     r0,r0,#4
;;;195    {
000002  b510              PUSH     {r4,lr}
;;;196        u8 reg7dval=((sat+2)<<4)|0X08;
000004  3020              ADDS     r0,r0,#0x20
000006  b2c0              UXTB     r0,r0
000008  f0400408          ORR      r4,r0,#8
;;;197        SCCB_WR_Reg(0XFF,0X00);
00000c  2100              MOVS     r1,#0
00000e  20ff              MOVS     r0,#0xff
000010  f7fffffe          BL       SCCB_WR_Reg
;;;198        SCCB_WR_Reg(0X7C,0X00);
000014  2100              MOVS     r1,#0
000016  207c              MOVS     r0,#0x7c
000018  f7fffffe          BL       SCCB_WR_Reg
;;;199        SCCB_WR_Reg(0X7D,0X02);
00001c  2102              MOVS     r1,#2
00001e  207d              MOVS     r0,#0x7d
000020  f7fffffe          BL       SCCB_WR_Reg
;;;200        SCCB_WR_Reg(0X7C,0X03);
000024  2103              MOVS     r1,#3
000026  207c              MOVS     r0,#0x7c
000028  f7fffffe          BL       SCCB_WR_Reg
;;;201        SCCB_WR_Reg(0X7D,reg7dval);
00002c  4621              MOV      r1,r4
00002e  207d              MOVS     r0,#0x7d
000030  f7fffffe          BL       SCCB_WR_Reg
;;;202        SCCB_WR_Reg(0X7D,reg7dval);
000034  4621              MOV      r1,r4
000036  e8bd4010          POP      {r4,lr}
00003a  207d              MOVS     r0,#0x7d
00003c  f7ffbffe          B.W      SCCB_WR_Reg
;;;203    }
;;;204    //亮度设置
                          ENDP


                          AREA ||i.OV2640_Contrast||, CODE, READONLY, ALIGN=1

                  OV2640_Contrast PROC
;;;225    
;;;226    void OV2640_Contrast(u8 contrast)
000000  b570              PUSH     {r4-r6,lr}
;;;227    {
;;;228        u8 reg7d0val=0X20;//默认为普通模式
000002  2520              MOVS     r5,#0x20
;;;229        u8 reg7d1val=0X20;
000004  462c              MOV      r4,r5
000006  b130              CBZ      r0,|L5.22|
;;;230        switch(contrast) {
000008  2801              CMP      r0,#1
00000a  d007              BEQ      |L5.28|
00000c  2803              CMP      r0,#3
00000e  d008              BEQ      |L5.34|
000010  2804              CMP      r0,#4
000012  d10b              BNE      |L5.44|
000014  e008              B        |L5.40|
                  |L5.22|
;;;231        case 0://-2
;;;232            reg7d0val=0X18;
000016  2518              MOVS     r5,#0x18
;;;233            reg7d1val=0X34;
000018  2434              MOVS     r4,#0x34
;;;234            break;
00001a  e007              B        |L5.44|
                  |L5.28|
;;;235        case 1://-1
;;;236            reg7d0val=0X1C;
00001c  251c              MOVS     r5,#0x1c
;;;237            reg7d1val=0X2A;
00001e  242a              MOVS     r4,#0x2a
;;;238            break;
000020  e004              B        |L5.44|
                  |L5.34|
;;;239        case 3://1
;;;240            reg7d0val=0X24;
000022  2524              MOVS     r5,#0x24
;;;241            reg7d1val=0X16;
000024  2416              MOVS     r4,#0x16
;;;242            break;
000026  e001              B        |L5.44|
                  |L5.40|
;;;243        case 4://2
;;;244            reg7d0val=0X28;
000028  2528              MOVS     r5,#0x28
;;;245            reg7d1val=0X0C;
00002a  240c              MOVS     r4,#0xc
                  |L5.44|
;;;246            break;
;;;247        }
;;;248        SCCB_WR_Reg(0xff,0x00);
00002c  2100              MOVS     r1,#0
00002e  20ff              MOVS     r0,#0xff
000030  f7fffffe          BL       SCCB_WR_Reg
;;;249        SCCB_WR_Reg(0x7c,0x00);
000034  2100              MOVS     r1,#0
000036  207c              MOVS     r0,#0x7c
000038  f7fffffe          BL       SCCB_WR_Reg
;;;250        SCCB_WR_Reg(0x7d,0x04);
00003c  2104              MOVS     r1,#4
00003e  207d              MOVS     r0,#0x7d
000040  f7fffffe          BL       SCCB_WR_Reg
;;;251        SCCB_WR_Reg(0x7c,0x07);
000044  2107              MOVS     r1,#7
000046  207c              MOVS     r0,#0x7c
000048  f7fffffe          BL       SCCB_WR_Reg
;;;252        SCCB_WR_Reg(0x7d,0x20);
00004c  2120              MOVS     r1,#0x20
00004e  207d              MOVS     r0,#0x7d
000050  f7fffffe          BL       SCCB_WR_Reg
;;;253        SCCB_WR_Reg(0x7d,reg7d0val);
000054  4629              MOV      r1,r5
000056  207d              MOVS     r0,#0x7d
000058  f7fffffe          BL       SCCB_WR_Reg
;;;254        SCCB_WR_Reg(0x7d,reg7d1val);
00005c  4621              MOV      r1,r4
00005e  207d              MOVS     r0,#0x7d
000060  f7fffffe          BL       SCCB_WR_Reg
;;;255        SCCB_WR_Reg(0x7d,0x06);
000064  e8bd4070          POP      {r4-r6,lr}
000068  2106              MOVS     r1,#6
00006a  207d              MOVS     r0,#0x7d
00006c  f7ffbffe          B.W      SCCB_WR_Reg
;;;256    }
;;;257    //特效设置
                          ENDP


                          AREA ||i.OV2640_ImageSize_Set||, CODE, READONLY, ALIGN=1

                  OV2640_ImageSize_Set PROC
;;;404    //    其他,设置失败
;;;405    u8 OV2640_ImageSize_Set(u16 width,u16 height)
000000  b570              PUSH     {r4-r6,lr}
;;;406    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;407        u8 temp;
;;;408        SCCB_WR_Reg(0XFF,0X00);
000006  2100              MOVS     r1,#0
000008  20ff              MOVS     r0,#0xff
00000a  f7fffffe          BL       SCCB_WR_Reg
;;;409        SCCB_WR_Reg(0XE0,0X04);
00000e  2104              MOVS     r1,#4
000010  20e0              MOVS     r0,#0xe0
000012  f7fffffe          BL       SCCB_WR_Reg
;;;410        SCCB_WR_Reg(0XC0,(width)>>3&0XFF);		//设置HSIZE的10:3位
000016  f3c401c7          UBFX     r1,r4,#3,#8
00001a  20c0              MOVS     r0,#0xc0
00001c  f7fffffe          BL       SCCB_WR_Reg
;;;411        SCCB_WR_Reg(0XC1,(height)>>3&0XFF);		//设置VSIZE的10:3位
000020  f3c501c7          UBFX     r1,r5,#3,#8
000024  20c1              MOVS     r0,#0xc1
000026  f7fffffe          BL       SCCB_WR_Reg
;;;412        temp=(width&0X07)<<3;
00002a  0760              LSLS     r0,r4,#29
;;;413        temp|=height&0X07;
00002c  f0050207          AND      r2,r5,#7
000030  ea426290          ORR      r2,r2,r0,LSR #26
;;;414        temp|=(width>>4)&0X80;
000034  2080              MOVS     r0,#0x80
000036  ea001114          AND      r1,r0,r4,LSR #4
00003a  4311              ORRS     r1,r1,r2
;;;415        SCCB_WR_Reg(0X8C,temp);
00003c  208c              MOVS     r0,#0x8c
00003e  f7fffffe          BL       SCCB_WR_Reg
;;;416        SCCB_WR_Reg(0XE0,0X00);
000042  2100              MOVS     r1,#0
000044  20e0              MOVS     r0,#0xe0
000046  f7fffffe          BL       SCCB_WR_Reg
;;;417        return 0;
00004a  2000              MOVS     r0,#0
;;;418    }
00004c  bd70              POP      {r4-r6,pc}
;;;419    
                          ENDP


                          AREA ||i.OV2640_ImageWin_Set||, CODE, READONLY, ALIGN=1

                  OV2640_ImageWin_Set PROC
;;;375    //    其他,设置失败
;;;376    u8 OV2640_ImageWin_Set(u16 offx,u16 offy,u16 width,u16 height)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;377    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
;;;378        u16 hsize;
;;;379        u16 vsize;
;;;380        u8 temp;
;;;381        if(width%4)return 1;
000008  0790              LSLS     r0,r2,#30
00000a  d002              BEQ      |L7.18|
00000c  2001              MOVS     r0,#1
                  |L7.14|
;;;382        if(height%4)return 2;
;;;383        hsize=width/4;
;;;384        vsize=height/4;
;;;385        SCCB_WR_Reg(0XFF,0X00);
;;;386        SCCB_WR_Reg(0XE0,0X04);
;;;387        SCCB_WR_Reg(0X51,hsize&0XFF);		//设置H_SIZE的低八位
;;;388        SCCB_WR_Reg(0X52,vsize&0XFF);		//设置V_SIZE的低八位
;;;389        SCCB_WR_Reg(0X53,offx&0XFF);		//设置offx的低八位
;;;390        SCCB_WR_Reg(0X54,offy&0XFF);		//设置offy的低八位
;;;391        temp=(vsize>>1)&0X80;
;;;392        temp|=(offy>>4)&0X70;
;;;393        temp|=(hsize>>5)&0X08;
;;;394        temp|=(offx>>8)&0X07;
;;;395        SCCB_WR_Reg(0X55,temp);				//设置H_SIZE/V_SIZE/OFFX,OFFY的高位
;;;396        SCCB_WR_Reg(0X57,(hsize>>2)&0X80);	//设置H_SIZE/V_SIZE/OFFX,OFFY的高位
;;;397        SCCB_WR_Reg(0XE0,0X00);
;;;398        return 0;
;;;399    }
00000e  e8bd81f0          POP      {r4-r8,pc}
                  |L7.18|
000012  0798              LSLS     r0,r3,#30             ;382
000014  d001              BEQ      |L7.26|
000016  2002              MOVS     r0,#2                 ;382
000018  e7f9              B        |L7.14|
                  |L7.26|
00001a  0894              LSRS     r4,r2,#2              ;383
00001c  089d              LSRS     r5,r3,#2              ;384
00001e  2100              MOVS     r1,#0                 ;385
000020  20ff              MOVS     r0,#0xff              ;385
000022  f7fffffe          BL       SCCB_WR_Reg
000026  2104              MOVS     r1,#4                 ;386
000028  20e0              MOVS     r0,#0xe0              ;386
00002a  f7fffffe          BL       SCCB_WR_Reg
00002e  b2e1              UXTB     r1,r4                 ;387
000030  2051              MOVS     r0,#0x51              ;387
000032  f7fffffe          BL       SCCB_WR_Reg
000036  b2e9              UXTB     r1,r5                 ;388
000038  2052              MOVS     r0,#0x52              ;388
00003a  f7fffffe          BL       SCCB_WR_Reg
00003e  b2f9              UXTB     r1,r7                 ;389
000040  2053              MOVS     r0,#0x53              ;389
000042  f7fffffe          BL       SCCB_WR_Reg
000046  b2f1              UXTB     r1,r6                 ;390
000048  2054              MOVS     r0,#0x54              ;390
00004a  f7fffffe          BL       SCCB_WR_Reg
00004e  4628              MOV      r0,r5                 ;391
000050  2580              MOVS     r5,#0x80              ;391
000052  ea050150          AND      r1,r5,r0,LSR #1       ;391
000056  2070              MOVS     r0,#0x70              ;392
000058  ea001016          AND      r0,r0,r6,LSR #4       ;392
00005c  4308              ORRS     r0,r0,r1              ;392
00005e  2108              MOVS     r1,#8                 ;393
000060  ea011154          AND      r1,r1,r4,LSR #5       ;393
000064  4301              ORRS     r1,r1,r0              ;393
000066  f3c72002          UBFX     r0,r7,#8,#3           ;394
00006a  4301              ORRS     r1,r1,r0              ;394
00006c  2055              MOVS     r0,#0x55              ;395
00006e  f7fffffe          BL       SCCB_WR_Reg
000072  ea050194          AND      r1,r5,r4,LSR #2       ;396
000076  2057              MOVS     r0,#0x57              ;396
000078  f7fffffe          BL       SCCB_WR_Reg
00007c  2100              MOVS     r1,#0                 ;397
00007e  20e0              MOVS     r0,#0xe0              ;397
000080  f7fffffe          BL       SCCB_WR_Reg
000084  2000              MOVS     r0,#0                 ;398
000086  e7c2              B        |L7.14|
;;;400    //该函数设置图像尺寸大小,也就是所选格式的输出分辨率
                          ENDP


                          AREA ||i.OV2640_Init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  OV2640_Init PROC
;;;13     //    其他,错误代码
;;;14     u8 OV2640_Init(void)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;15     {
;;;16         u16 i=0;
000004  2400              MOVS     r4,#0
;;;17         u16 reg;
;;;18     
;;;19         GPIO_InitTypeDef  GPIO_InitStructure;
;;;20         //设置IO
;;;21         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOC, ENABLE);	 //使能相关端口时钟
000006  2101              MOVS     r1,#1
000008  201c              MOVS     r0,#0x1c
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;22         // OV_PCLK C4 替换为B8
;;;23         GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_8; 	//PB4 输入 上拉
00000e  f44f7680          MOV      r6,#0x100
000012  f8ad6000          STRH     r6,[sp,#0]
;;;24         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;  // 上拉输入
000016  2548              MOVS     r5,#0x48
000018  f88d5003          STRB     r5,[sp,#3]
;;;25         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001c  2003              MOVS     r0,#3
;;;26         GPIO_Init(GPIOB,&GPIO_InitStructure);
00001e  f8df813c          LDR      r8,|L8.348|
000022  f88d0002          STRB     r0,[sp,#2]            ;25
000026  4669              MOV      r1,sp
000028  4640              MOV      r0,r8
00002a  f7fffffe          BL       GPIO_Init
;;;27         GPIO_SetBits(GPIOB,GPIO_Pin_8);
00002e  4631              MOV      r1,r6
000030  4640              MOV      r0,r8
000032  f7fffffe          BL       GPIO_SetBits
;;;28         // OV_PWDN  B3 替换为B9
;;;29         GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_9; 	//PB3 输出
000036  0076              LSLS     r6,r6,#1
000038  f8ad6000          STRH     r6,[sp,#0]
;;;30         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00003c  2710              MOVS     r7,#0x10
00003e  f88d7003          STRB     r7,[sp,#3]
;;;31         GPIO_Init(GPIOB,&GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4640              MOV      r0,r8
000046  f7fffffe          BL       GPIO_Init
;;;32         GPIO_SetBits(GPIOB,GPIO_Pin_9);
00004a  4631              MOV      r1,r6
00004c  4640              MOV      r0,r8
00004e  f7fffffe          BL       GPIO_SetBits
;;;33     
;;;34         //数据口PC0-7
;;;35         GPIO_InitStructure.GPIO_Pin  = 0xff; //PB0~7 输入 上拉
000052  20ff              MOVS     r0,#0xff
000054  f8ad0000          STRH     r0,[sp,#0]
;;;36         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000058  f88d5003          STRB     r5,[sp,#3]
;;;37         GPIO_Init(GPIOC, &GPIO_InitStructure);
00005c  4669              MOV      r1,sp
00005e  4840              LDR      r0,|L8.352|
000060  f7fffffe          BL       GPIO_Init
;;;38     
;;;39         //VSYNG 修改为 PA0
;;;40         GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;
000064  2601              MOVS     r6,#1
;;;41         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;//PD6输入
;;;42         GPIO_Init(GPIOA, &GPIO_InitStructure);
000066  f8df80fc          LDR      r8,|L8.356|
00006a  f8ad6000          STRH     r6,[sp,#0]            ;40
00006e  f88d5003          STRB     r5,[sp,#3]            ;41
000072  4669              MOV      r1,sp
000074  4640              MOV      r0,r8
000076  f7fffffe          BL       GPIO_Init
;;;43         GPIO_SetBits(GPIOA,GPIO_Pin_0);
00007a  2101              MOVS     r1,#1
00007c  4640              MOV      r0,r8
00007e  f7fffffe          BL       GPIO_SetBits
;;;44     
;;;45         //HREF替换为PA1
;;;46         GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_1; //PG14输入
000082  2002              MOVS     r0,#2
000084  f8ad0000          STRH     r0,[sp,#0]
;;;47         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000088  f88d5003          STRB     r5,[sp,#3]
;;;48         GPIO_Init(GPIOA, &GPIO_InitStructure);
00008c  4669              MOV      r1,sp
00008e  4640              MOV      r0,r8
000090  f7fffffe          BL       GPIO_Init
;;;49         GPIO_SetBits(GPIOA,GPIO_Pin_1);
000094  2102              MOVS     r1,#2
000096  4640              MOV      r0,r8
000098  f7fffffe          BL       GPIO_SetBits
;;;50     
;;;51         //RESET 替换为PA2
;;;52         GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_2; //PG15输出
00009c  2004              MOVS     r0,#4
00009e  f8ad0000          STRH     r0,[sp,#0]
;;;53         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
0000a2  f88d7003          STRB     r7,[sp,#3]
;;;54         GPIO_Init(GPIOA, &GPIO_InitStructure);
0000a6  4669              MOV      r1,sp
0000a8  4640              MOV      r0,r8
0000aa  f7fffffe          BL       GPIO_Init
;;;55         GPIO_SetBits(GPIOA,GPIO_Pin_2);
0000ae  2104              MOVS     r1,#4
0000b0  4640              MOV      r0,r8
0000b2  f7fffffe          BL       GPIO_SetBits
;;;56     
;;;57         OV2640_PWDN=0;				//POWER ON
0000b6  482c              LDR      r0,|L8.360|
0000b8  2500              MOVS     r5,#0
0000ba  f8c051a4          STR      r5,[r0,#0x1a4]
;;;58         delay_ms(10);
0000be  200a              MOVS     r0,#0xa
0000c0  f7fffffe          BL       delay_ms
;;;59         OV2640_RST=0;				//复位OV2640
0000c4  4f29              LDR      r7,|L8.364|
0000c6  f8c75188          STR      r5,[r7,#0x188]
;;;60         delay_ms(10);
0000ca  200a              MOVS     r0,#0xa
0000cc  f50777c4          ADD      r7,r7,#0x188
0000d0  f7fffffe          BL       delay_ms
;;;61         OV2640_RST=1;				//结束复位
0000d4  603e              STR      r6,[r7,#0]
;;;62         SCCB_Init();        		//初始化SCCB 的IO口
0000d6  f7fffffe          BL       SCCB_Init
;;;63         SCCB_WR_Reg(OV2640_DSP_RA_DLMT, 0x01);	//操作sensor寄存器
0000da  2101              MOVS     r1,#1
0000dc  20ff              MOVS     r0,#0xff
0000de  f7fffffe          BL       SCCB_WR_Reg
;;;64         SCCB_WR_Reg(OV2640_SENSOR_COM7, 0x80);	//软复位OV2640
0000e2  2180              MOVS     r1,#0x80
0000e4  2012              MOVS     r0,#0x12
0000e6  f7fffffe          BL       SCCB_WR_Reg
;;;65         delay_ms(50);
0000ea  2032              MOVS     r0,#0x32
0000ec  f7fffffe          BL       delay_ms
;;;66         reg=SCCB_RD_Reg(OV2640_SENSOR_MIDH);	//读取厂家ID 高八位
0000f0  201c              MOVS     r0,#0x1c
0000f2  f7fffffe          BL       SCCB_RD_Reg
;;;67         reg<<=8;
0000f6  f64f75ff          MOV      r5,#0xffff
0000fa  ea052600          AND      r6,r5,r0,LSL #8
;;;68         reg|=SCCB_RD_Reg(OV2640_SENSOR_MIDL);	//读取厂家ID 低八位
0000fe  201d              MOVS     r0,#0x1d
000100  f7fffffe          BL       SCCB_RD_Reg
000104  ea400106          ORR      r1,r0,r6
;;;69         if(reg!=OV2640_MID) {
000108  f5a140fe          SUB      r0,r1,#0x7f00
00010c  38a2              SUBS     r0,r0,#0xa2
00010e  d005              BEQ      |L8.284|
;;;70             printf("MID:%d\r\n",reg);
000110  a017              ADR      r0,|L8.368|
000112  f7fffffe          BL       __2printf
;;;71             return 1;
000116  2001              MOVS     r0,#1
                  |L8.280|
;;;72         }
;;;73         reg=SCCB_RD_Reg(OV2640_SENSOR_PIDH);	//读取厂家ID 高八位
;;;74         reg<<=8;
;;;75         reg|=SCCB_RD_Reg(OV2640_SENSOR_PIDL);	//读取厂家ID 低八位
;;;76         if(reg!=OV2640_PID) {
;;;77             printf("HID:%d\r\n",reg);
;;;78         }
;;;79         //初始化 OV2640,采用SXGA分辨率(1600*1200)
;;;80         for(i=0; i<sizeof(ov2640_uxga_init_reg_tbl)/2; i++) {
;;;81             SCCB_WR_Reg(ov2640_uxga_init_reg_tbl[i][0],ov2640_uxga_init_reg_tbl[i][1]);
;;;82         }
;;;83         return 0x00; 	//ok
;;;84     }
000118  e8bd83f8          POP      {r3-r9,pc}
                  |L8.284|
00011c  200a              MOVS     r0,#0xa               ;73
00011e  f7fffffe          BL       SCCB_RD_Reg
000122  ea052500          AND      r5,r5,r0,LSL #8       ;74
000126  200b              MOVS     r0,#0xb               ;75
000128  f7fffffe          BL       SCCB_RD_Reg
00012c  ea400105          ORR      r1,r0,r5              ;75
000130  f5a15018          SUB      r0,r1,#0x2600         ;76
000134  3842              SUBS     r0,r0,#0x42           ;76
000136  d002              BEQ      |L8.318|
000138  a010              ADR      r0,|L8.380|
00013a  f7fffffe          BL       __2printf
                  |L8.318|
00013e  4d12              LDR      r5,|L8.392|
                  |L8.320|
000140  eb050044          ADD      r0,r5,r4,LSL #1       ;81
000144  7841              LDRB     r1,[r0,#1]            ;81
000146  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;81
00014a  f7fffffe          BL       SCCB_WR_Reg
00014e  1c64              ADDS     r4,r4,#1              ;81
000150  b2a4              UXTH     r4,r4                 ;80
000152  2cb2              CMP      r4,#0xb2              ;80
000154  d3f4              BCC      |L8.320|
000156  2000              MOVS     r0,#0                 ;83
000158  e7de              B        |L8.280|
;;;85     //OV2640切换为JPEG模式
                          ENDP

00015a  0000              DCW      0x0000
                  |L8.348|
                          DCD      0x40010c00
                  |L8.352|
                          DCD      0x40011000
                  |L8.356|
                          DCD      0x40010800
                  |L8.360|
                          DCD      0x42218000
                  |L8.364|
                          DCD      0x42210000
                  |L8.368|
000170  4d49443a          DCB      "MID:%d\r\n",0
000174  25640d0a
000178  00      
000179  00                DCB      0
00017a  00                DCB      0
00017b  00                DCB      0
                  |L8.380|
00017c  4849443a          DCB      "HID:%d\r\n",0
000180  25640d0a
000184  00      
000185  00                DCB      0
000186  00                DCB      0
000187  00                DCB      0
                  |L8.392|
                          DCD      ||.constdata||

                          AREA ||i.OV2640_JPEG_Mode||, CODE, READONLY, ALIGN=2

                  OV2640_JPEG_Mode PROC
;;;85     //OV2640切换为JPEG模式
;;;86     void OV2640_JPEG_Mode(void)
000000  b570              PUSH     {r4-r6,lr}
;;;87     {
;;;88         u16 i=0;
;;;89         //设置:YUV422格式
;;;90         for(i=0; i<(sizeof(ov2640_yuv422_reg_tbl)/2); i++) {
;;;91             SCCB_WR_Reg(ov2640_yuv422_reg_tbl[i][0],ov2640_yuv422_reg_tbl[i][1]);
000002  4d0e              LDR      r5,|L9.60|
000004  2400              MOVS     r4,#0                 ;88
                  |L9.6|
000006  eb050044          ADD      r0,r5,r4,LSL #1
00000a  7841              LDRB     r1,[r0,#1]
00000c  f8150014          LDRB     r0,[r5,r4,LSL #1]
000010  f7fffffe          BL       SCCB_WR_Reg
000014  1c64              ADDS     r4,r4,#1
000016  b2a4              UXTH     r4,r4                 ;90
000018  2c08              CMP      r4,#8                 ;90
00001a  d3f4              BCC      |L9.6|
;;;92         }
;;;93         //设置:输出JPEG数据
;;;94         for(i=0; i<(sizeof(ov2640_jpeg_reg_tbl)/2); i++) {
;;;95             SCCB_WR_Reg(ov2640_jpeg_reg_tbl[i][0],ov2640_jpeg_reg_tbl[i][1]);
00001c  4d07              LDR      r5,|L9.60|
00001e  2400              MOVS     r4,#0                 ;94
000020  3510              ADDS     r5,r5,#0x10
                  |L9.34|
000022  eb050044          ADD      r0,r5,r4,LSL #1
000026  7841              LDRB     r1,[r0,#1]
000028  f8150014          LDRB     r0,[r5,r4,LSL #1]
00002c  f7fffffe          BL       SCCB_WR_Reg
000030  1c64              ADDS     r4,r4,#1
000032  b2a4              UXTH     r4,r4                 ;94
000034  2c07              CMP      r4,#7                 ;94
000036  d3f4              BCC      |L9.34|
;;;96         }
;;;97     }
000038  bd70              POP      {r4-r6,pc}
;;;98     //OV2640切换为RGB565模式
                          ENDP

00003a  0000              DCW      0x0000
                  |L9.60|
                          DCD      ||.constdata||+0x164

                          AREA ||i.OV2640_Light_Mode||, CODE, READONLY, ALIGN=1

                  OV2640_Light_Mode PROC
;;;155    //4,家里home
;;;156    void OV2640_Light_Mode(u8 mode)
000000  b570              PUSH     {r4-r6,lr}
;;;157    {
;;;158        u8 regccval=0X5E;//Sunny
000002  255e              MOVS     r5,#0x5e
;;;159        u8 regcdval=0X41;
000004  2641              MOVS     r6,#0x41
;;;160        u8 regceval=0X54;
000006  2454              MOVS     r4,#0x54
000008  b130              CBZ      r0,|L10.24|
;;;161        switch(mode) {
00000a  2802              CMP      r0,#2
00000c  d00b              BEQ      |L10.38|
00000e  2803              CMP      r0,#3
000010  d00c              BEQ      |L10.44|
000012  2804              CMP      r0,#4
000014  d110              BNE      |L10.56|
000016  e00c              B        |L10.50|
                  |L10.24|
;;;162        case 0://auto
;;;163            SCCB_WR_Reg(0XFF,0X00);
000018  2100              MOVS     r1,#0
00001a  20ff              MOVS     r0,#0xff
00001c  f7fffffe          BL       SCCB_WR_Reg
;;;164            SCCB_WR_Reg(0XC7,0X00);//AWB ON
000020  2100              MOVS     r1,#0
000022  20c7              MOVS     r0,#0xc7
;;;165            return;
000024  e01a              B        |L10.92|
                  |L10.38|
;;;166        case 2://cloudy
;;;167            regccval=0X65;
000026  2565              MOVS     r5,#0x65
;;;168            regcdval=0X41;
;;;169            regceval=0X4F;
000028  244f              MOVS     r4,#0x4f
;;;170            break;
00002a  e005              B        |L10.56|
                  |L10.44|
;;;171        case 3://office
;;;172            regccval=0X52;
00002c  2552              MOVS     r5,#0x52
;;;173            regcdval=0X41;
;;;174            regceval=0X66;
00002e  2466              MOVS     r4,#0x66
;;;175            break;
000030  e002              B        |L10.56|
                  |L10.50|
;;;176        case 4://home
;;;177            regccval=0X42;
000032  2542              MOVS     r5,#0x42
;;;178            regcdval=0X3F;
000034  263f              MOVS     r6,#0x3f
;;;179            regceval=0X71;
000036  2471              MOVS     r4,#0x71
                  |L10.56|
;;;180            break;
;;;181        }
;;;182        SCCB_WR_Reg(0XFF,0X00);
000038  2100              MOVS     r1,#0
00003a  20ff              MOVS     r0,#0xff
00003c  f7fffffe          BL       SCCB_WR_Reg
;;;183        SCCB_WR_Reg(0XC7,0X40);	//AWB OFF
000040  2140              MOVS     r1,#0x40
000042  20c7              MOVS     r0,#0xc7
000044  f7fffffe          BL       SCCB_WR_Reg
;;;184        SCCB_WR_Reg(0XCC,regccval);
000048  4629              MOV      r1,r5
00004a  20cc              MOVS     r0,#0xcc
00004c  f7fffffe          BL       SCCB_WR_Reg
;;;185        SCCB_WR_Reg(0XCD,regcdval);
000050  4631              MOV      r1,r6
000052  20cd              MOVS     r0,#0xcd
000054  f7fffffe          BL       SCCB_WR_Reg
;;;186        SCCB_WR_Reg(0XCE,regceval);
000058  4621              MOV      r1,r4
00005a  20ce              MOVS     r0,#0xce
                  |L10.92|
00005c  e8bd4070          POP      {r4-r6,lr}
000060  f7ffbffe          B.W      SCCB_WR_Reg
;;;187    }
;;;188    //色度设置
                          ENDP


                          AREA ||i.OV2640_OutSize_Set||, CODE, READONLY, ALIGN=1

                  OV2640_OutSize_Set PROC
;;;347    //    其他,设置失败
;;;348    u8 OV2640_OutSize_Set(u16 width,u16 height)
000000  b570              PUSH     {r4-r6,lr}
;;;349    {
;;;350        u16 outh;
;;;351        u16 outw;
;;;352        u8 temp;
;;;353        if(width%4)return 1;
000002  0782              LSLS     r2,r0,#30
000004  d001              BEQ      |L11.10|
000006  2001              MOVS     r0,#1
;;;354        if(height%4)return 2;
;;;355        outw=width/4;
;;;356        outh=height/4;
;;;357        SCCB_WR_Reg(0XFF,0X00);
;;;358        SCCB_WR_Reg(0XE0,0X04);
;;;359        SCCB_WR_Reg(0X5A,outw&0XFF);		//设置OUTW的低八位
;;;360        SCCB_WR_Reg(0X5B,outh&0XFF);		//设置OUTH的低八位
;;;361        temp=(outw>>8)&0X03;
;;;362        temp|=(outh>>6)&0X04;
;;;363        SCCB_WR_Reg(0X5C,temp);				//设置OUTH/OUTW的高位
;;;364        SCCB_WR_Reg(0XE0,0X00);
;;;365        return 0;
;;;366    }
000008  bd70              POP      {r4-r6,pc}
                  |L11.10|
00000a  078a              LSLS     r2,r1,#30             ;354
00000c  d001              BEQ      |L11.18|
00000e  2002              MOVS     r0,#2                 ;354
000010  bd70              POP      {r4-r6,pc}
                  |L11.18|
000012  0884              LSRS     r4,r0,#2              ;355
000014  088d              LSRS     r5,r1,#2              ;356
000016  2100              MOVS     r1,#0                 ;357
000018  20ff              MOVS     r0,#0xff              ;357
00001a  f7fffffe          BL       SCCB_WR_Reg
00001e  2104              MOVS     r1,#4                 ;358
000020  20e0              MOVS     r0,#0xe0              ;358
000022  f7fffffe          BL       SCCB_WR_Reg
000026  b2e1              UXTB     r1,r4                 ;359
000028  205a              MOVS     r0,#0x5a              ;359
00002a  f7fffffe          BL       SCCB_WR_Reg
00002e  b2e9              UXTB     r1,r5                 ;360
000030  205b              MOVS     r0,#0x5b              ;360
000032  f7fffffe          BL       SCCB_WR_Reg
000036  2104              MOVS     r1,#4                 ;362
000038  f3c42001          UBFX     r0,r4,#8,#2           ;361
00003c  ea011195          AND      r1,r1,r5,LSR #6       ;362
000040  4301              ORRS     r1,r1,r0              ;362
000042  205c              MOVS     r0,#0x5c              ;363
000044  f7fffffe          BL       SCCB_WR_Reg
000048  2100              MOVS     r1,#0                 ;364
00004a  20e0              MOVS     r0,#0xe0              ;364
00004c  f7fffffe          BL       SCCB_WR_Reg
000050  2000              MOVS     r0,#0                 ;365
000052  bd70              POP      {r4-r6,pc}
;;;367    //设置图像开窗大小
                          ENDP


                          AREA ||i.OV2640_RGB565_Mode||, CODE, READONLY, ALIGN=2

                  OV2640_RGB565_Mode PROC
;;;98     //OV2640切换为RGB565模式
;;;99     void OV2640_RGB565_Mode(void)
000000  b570              PUSH     {r4-r6,lr}
;;;100    {
;;;101        u16 i=0;
;;;102        //设置:RGB565输出
;;;103        for(i=0; i<(sizeof(ov2640_rgb565_reg_tbl)/2); i++) {
;;;104            SCCB_WR_Reg(ov2640_rgb565_reg_tbl[i][0],ov2640_rgb565_reg_tbl[i][1]);
000002  4d07              LDR      r5,|L12.32|
000004  2400              MOVS     r4,#0                 ;101
                  |L12.6|
000006  eb050044          ADD      r0,r5,r4,LSL #1
00000a  7841              LDRB     r1,[r0,#1]
00000c  f8150014          LDRB     r0,[r5,r4,LSL #1]
000010  f7fffffe          BL       SCCB_WR_Reg
000014  1c64              ADDS     r4,r4,#1
000016  b2a4              UXTH     r4,r4                 ;103
000018  2c0e              CMP      r4,#0xe               ;103
00001a  d3f4              BCC      |L12.6|
;;;105        }
;;;106    }
00001c  bd70              POP      {r4-r6,pc}
;;;107    //自动曝光设置参数表,支持5个等级
                          ENDP

00001e  0000              DCW      0x0000
                  |L12.32|
                          DCD      ||.constdata||+0x182

                          AREA ||i.OV2640_Special_Effects||, CODE, READONLY, ALIGN=1

                  OV2640_Special_Effects PROC
;;;264    //6,复古
;;;265    void OV2640_Special_Effects(u8 eft)
000000  b570              PUSH     {r4-r6,lr}
;;;266    {
;;;267        u8 reg7d0val=0X00;//默认为普通模式
;;;268        u8 reg7d1val=0X80;
000002  2680              MOVS     r6,#0x80
000004  2400              MOVS     r4,#0                 ;267
;;;269        u8 reg7d2val=0X80;
000006  4635              MOV      r5,r6
;;;270        switch(eft) {
000008  2807              CMP      r0,#7
00000a  d217              BCS      |L13.60|
00000c  e8dff000          TBB      [pc,r0]
000010  16040608          DCB      0x16,0x04,0x06,0x08
000014  0c0f1300          DCB      0x0c,0x0f,0x13,0x00
;;;271        case 1://负片
;;;272            reg7d0val=0X40;
000018  2440              MOVS     r4,#0x40
;;;273            break;
00001a  e00f              B        |L13.60|
;;;274        case 2://黑白
;;;275            reg7d0val=0X18;
00001c  2418              MOVS     r4,#0x18
;;;276            break;
00001e  e00d              B        |L13.60|
;;;277        case 3://偏红色
;;;278            reg7d0val=0X18;
000020  2418              MOVS     r4,#0x18
;;;279            reg7d1val=0X40;
000022  2640              MOVS     r6,#0x40
;;;280            reg7d2val=0XC0;
000024  25c0              MOVS     r5,#0xc0
;;;281            break;
000026  e009              B        |L13.60|
;;;282        case 4://偏绿色
;;;283            reg7d0val=0X18;
000028  2418              MOVS     r4,#0x18
;;;284            reg7d1val=0X40;
00002a  2640              MOVS     r6,#0x40
;;;285            reg7d2val=0X40;
;;;286            break;
00002c  e001              B        |L13.50|
;;;287        case 5://偏蓝色
;;;288            reg7d0val=0X18;
00002e  2418              MOVS     r4,#0x18
;;;289            reg7d1val=0XA0;
000030  26a0              MOVS     r6,#0xa0
                  |L13.50|
000032  2540              MOVS     r5,#0x40              ;285
000034  e002              B        |L13.60|
;;;290            reg7d2val=0X40;
;;;291            break;
;;;292        case 6://复古
;;;293            reg7d0val=0X18;
000036  2418              MOVS     r4,#0x18
;;;294            reg7d1val=0X40;
000038  2640              MOVS     r6,#0x40
;;;295            reg7d2val=0XA6;
00003a  25a6              MOVS     r5,#0xa6
                  |L13.60|
;;;296            break;
;;;297        }
;;;298        SCCB_WR_Reg(0xff,0x00);
00003c  2100              MOVS     r1,#0
00003e  20ff              MOVS     r0,#0xff
000040  f7fffffe          BL       SCCB_WR_Reg
;;;299        SCCB_WR_Reg(0x7c,0x00);
000044  2100              MOVS     r1,#0
000046  207c              MOVS     r0,#0x7c
000048  f7fffffe          BL       SCCB_WR_Reg
;;;300        SCCB_WR_Reg(0x7d,reg7d0val);
00004c  4621              MOV      r1,r4
00004e  207d              MOVS     r0,#0x7d
000050  f7fffffe          BL       SCCB_WR_Reg
;;;301        SCCB_WR_Reg(0x7c,0x05);
000054  2105              MOVS     r1,#5
000056  207c              MOVS     r0,#0x7c
000058  f7fffffe          BL       SCCB_WR_Reg
;;;302        SCCB_WR_Reg(0x7d,reg7d1val);
00005c  4631              MOV      r1,r6
00005e  207d              MOVS     r0,#0x7d
000060  f7fffffe          BL       SCCB_WR_Reg
;;;303        SCCB_WR_Reg(0x7d,reg7d2val);
000064  4629              MOV      r1,r5
000066  e8bd4070          POP      {r4-r6,lr}
00006a  207d              MOVS     r0,#0x7d
00006c  f7ffbffe          B.W      SCCB_WR_Reg
;;;304    }
;;;305    //彩条测试
                          ENDP


                          AREA ||i.OV2640_Window_Set||, CODE, READONLY, ALIGN=1

                  OV2640_Window_Set PROC
;;;319    //width,height:宽度(对应:horizontal)和高度(对应:vertical)
;;;320    void OV2640_Window_Set(u16 sx,u16 sy,u16 width,u16 height)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;321    {
000004  460d              MOV      r5,r1
000006  4604              MOV      r4,r0
;;;322        u16 endx;
;;;323        u16 endy;
;;;324        u8 temp;
;;;325        endx=sx+width/2;	//V*2
000008  eb000752          ADD      r7,r0,r2,LSR #1
;;;326        endy=sy+height/2;
00000c  eb010653          ADD      r6,r1,r3,LSR #1
;;;327    
;;;328        SCCB_WR_Reg(0XFF,0X01);
000010  2101              MOVS     r1,#1
000012  20ff              MOVS     r0,#0xff
000014  f7fffffe          BL       SCCB_WR_Reg
;;;329        temp=SCCB_RD_Reg(0X03);				//读取Vref之前的值
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       SCCB_RD_Reg
;;;330        temp&=0XF0;
;;;331        temp|=((endy&0X03)<<2)|(sy&0X03);
00001e  f0060203          AND      r2,r6,#3
000022  4629              MOV      r1,r5
000024  f00000f0          AND      r0,r0,#0xf0           ;330
000028  f362019f          BFI      r1,r2,#2,#30
00002c  4301              ORRS     r1,r1,r0
;;;332        SCCB_WR_Reg(0X03,temp);				//设置Vref的start和end的最低2位
00002e  2003              MOVS     r0,#3
000030  f7fffffe          BL       SCCB_WR_Reg
;;;333        SCCB_WR_Reg(0X19,sy>>2);			//设置Vref的start高8位
000034  f3c50187          UBFX     r1,r5,#2,#8
000038  2019              MOVS     r0,#0x19
00003a  f7fffffe          BL       SCCB_WR_Reg
;;;334        SCCB_WR_Reg(0X1A,endy>>2);			//设置Vref的end的高8位
00003e  f3c60187          UBFX     r1,r6,#2,#8
000042  201a              MOVS     r0,#0x1a
000044  f7fffffe          BL       SCCB_WR_Reg
;;;335    
;;;336        temp=SCCB_RD_Reg(0X32);				//读取Href之前的值
000048  2032              MOVS     r0,#0x32
00004a  f7fffffe          BL       SCCB_RD_Reg
;;;337        temp&=0XC0;
;;;338        temp|=((endx&0X07)<<3)|(sx&0X07);
00004e  f0070207          AND      r2,r7,#7
000052  4621              MOV      r1,r4
000054  f00000c0          AND      r0,r0,#0xc0           ;337
000058  f36201df          BFI      r1,r2,#3,#29
00005c  4301              ORRS     r1,r1,r0
;;;339        SCCB_WR_Reg(0X32,temp);				//设置Href的start和end的最低3位
00005e  2032              MOVS     r0,#0x32
000060  f7fffffe          BL       SCCB_WR_Reg
;;;340        SCCB_WR_Reg(0X17,sx>>3);			//设置Href的start高8位
000064  f3c401c7          UBFX     r1,r4,#3,#8
000068  2017              MOVS     r0,#0x17
00006a  f7fffffe          BL       SCCB_WR_Reg
;;;341        SCCB_WR_Reg(0X18,endx>>3);			//设置Href的end的高8位
00006e  f3c701c7          UBFX     r1,r7,#3,#8
000072  e8bd41f0          POP      {r4-r8,lr}
000076  2018              MOVS     r0,#0x18
000078  f7ffbffe          B.W      SCCB_WR_Reg
;;;342    }
;;;343    //设置图像输出大小
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  ov2640_uxga_init_reg_tbl
000000  ff002cff          DCB      0xff,0x00,0x2c,0xff
000004  2edfff01          DCB      0x2e,0xdf,0xff,0x01
000008  3c321100          DCB      0x3c,0x32,0x11,0x00
00000c  090204d8          DCB      0x09,0x02,0x04,0xd8
000010  13e51448          DCB      0x13,0xe5,0x14,0x48
000014  2c0c3378          DCB      0x2c,0x0c,0x33,0x78
000018  3a333bfb          DCB      0x3a,0x33,0x3b,0xfb
00001c  3e004311          DCB      0x3e,0x00,0x43,0x11
000020  16103992          DCB      0x16,0x10,0x39,0x92
000024  35da221a          DCB      0x35,0xda,0x22,0x1a
000028  37c32300          DCB      0x37,0xc3,0x23,0x00
00002c  34c0361a          DCB      0x34,0xc0,0x36,0x1a
000030  068807c0          DCB      0x06,0x88,0x07,0xc0
000034  0d870e41          DCB      0x0d,0x87,0x0e,0x41
000038  4c004800          DCB      0x4c,0x00,0x48,0x00
00003c  5b004203          DCB      0x5b,0x00,0x42,0x03
000040  4a812199          DCB      0x4a,0x81,0x21,0x99
000044  24402538          DCB      0x24,0x40,0x25,0x38
000048  26825c00          DCB      0x26,0x82,0x5c,0x00
00004c  63004600          DCB      0x63,0x00,0x46,0x00
000050  0c3c6170          DCB      0x0c,0x3c,0x61,0x70
000054  62807c05          DCB      0x62,0x80,0x7c,0x05
000058  20802830          DCB      0x20,0x80,0x28,0x30
00005c  6c006d80          DCB      0x6c,0x00,0x6d,0x80
000060  6e007002          DCB      0x6e,0x00,0x70,0x02
000064  719473c1          DCB      0x71,0x94,0x73,0xc1
000068  3d345a57          DCB      0x3d,0x34,0x5a,0x57
00006c  12001711          DCB      0x12,0x00,0x17,0x11
000070  18751901          DCB      0x18,0x75,0x19,0x01
000074  1a973236          DCB      0x1a,0x97,0x32,0x36
000078  030f3740          DCB      0x03,0x0f,0x37,0x40
00007c  4fca50a8          DCB      0x4f,0xca,0x50,0xa8
000080  5a236d00          DCB      0x5a,0x23,0x6d,0x00
000084  6d38ff00          DCB      0x6d,0x38,0xff,0x00
000088  e57ff9c0          DCB      0xe5,0x7f,0xf9,0xc0
00008c  4124e014          DCB      0x41,0x24,0xe0,0x14
000090  76ff33a0          DCB      0x76,0xff,0x33,0xa0
000094  42204318          DCB      0x42,0x20,0x43,0x18
000098  4c0087d5          DCB      0x4c,0x00,0x87,0xd5
00009c  883fd703          DCB      0x88,0x3f,0xd7,0x03
0000a0  d910d382          DCB      0xd9,0x10,0xd3,0x82
0000a4  c808c980          DCB      0xc8,0x08,0xc9,0x80
0000a8  7c007d00          DCB      0x7c,0x00,0x7d,0x00
0000ac  7c037d48          DCB      0x7c,0x03,0x7d,0x48
0000b0  7d487c08          DCB      0x7d,0x48,0x7c,0x08
0000b4  7d207d10          DCB      0x7d,0x20,0x7d,0x10
0000b8  7d0e9000          DCB      0x7d,0x0e,0x90,0x00
0000bc  910e911a          DCB      0x91,0x0e,0x91,0x1a
0000c0  9131915a          DCB      0x91,0x31,0x91,0x5a
0000c4  91699175          DCB      0x91,0x69,0x91,0x75
0000c8  917e9188          DCB      0x91,0x7e,0x91,0x88
0000cc  918f9196          DCB      0x91,0x8f,0x91,0x96
0000d0  91a391af          DCB      0x91,0xa3,0x91,0xaf
0000d4  91c491d7          DCB      0x91,0xc4,0x91,0xd7
0000d8  91e89120          DCB      0x91,0xe8,0x91,0x20
0000dc  92009306          DCB      0x92,0x00,0x93,0x06
0000e0  93e39305          DCB      0x93,0xe3,0x93,0x05
0000e4  93059300          DCB      0x93,0x05,0x93,0x00
0000e8  93049300          DCB      0x93,0x04,0x93,0x00
0000ec  93009300          DCB      0x93,0x00,0x93,0x00
0000f0  93009300          DCB      0x93,0x00,0x93,0x00
0000f4  93009300          DCB      0x93,0x00,0x93,0x00
0000f8  96009708          DCB      0x96,0x00,0x97,0x08
0000fc  97199702          DCB      0x97,0x19,0x97,0x02
000100  970c9724          DCB      0x97,0x0c,0x97,0x24
000104  97309728          DCB      0x97,0x30,0x97,0x28
000108  97269702          DCB      0x97,0x26,0x97,0x02
00010c  97989780          DCB      0x97,0x98,0x97,0x80
000110  97009700          DCB      0x97,0x00,0x97,0x00
000114  c3efa400          DCB      0xc3,0xef,0xa4,0x00
000118  a800c511          DCB      0xa8,0x00,0xc5,0x11
00011c  c651bf80          DCB      0xc6,0x51,0xbf,0x80
000120  c710b666          DCB      0xc7,0x10,0xb6,0x66
000124  b8a5b764          DCB      0xb8,0xa5,0xb7,0x64
000128  b97cb3af          DCB      0xb9,0x7c,0xb3,0xaf
00012c  b497b5ff          DCB      0xb4,0x97,0xb5,0xff
000130  b0c5b194          DCB      0xb0,0xc5,0xb1,0x94
000134  b20fc45c          DCB      0xb2,0x0f,0xc4,0x5c
000138  c0c8c196          DCB      0xc0,0xc8,0xc1,0x96
00013c  8c00863d          DCB      0x8c,0x00,0x86,0x3d
000140  50005190          DCB      0x50,0x00,0x51,0x90
000144  522c5300          DCB      0x52,0x2c,0x53,0x00
000148  54005588          DCB      0x54,0x00,0x55,0x88
00014c  5a905b2c          DCB      0x5a,0x90,0x5b,0x2c
000150  5c05d302          DCB      0x5c,0x05,0xd3,0x02
000154  c3ed7f00          DCB      0xc3,0xed,0x7f,0x00
000158  da09e51f          DCB      0xda,0x09,0xe5,0x1f
00015c  e167e000          DCB      0xe1,0x67,0xe0,0x00
000160  dd7f0500          DCB      0xdd,0x7f,0x05,0x00
                  ov2640_yuv422_reg_tbl
000164  ff00da10          DCB      0xff,0x00,0xda,0x10
000168  d703df00          DCB      0xd7,0x03,0xdf,0x00
00016c  33803c40          DCB      0x33,0x80,0x3c,0x40
000170  e1770000          DCB      0xe1,0x77,0x00,0x00
                  ov2640_jpeg_reg_tbl
000174  ff01e014          DCB      0xff,0x01,0xe0,0x14
000178  e177e51f          DCB      0xe1,0x77,0xe5,0x1f
00017c  d703da10          DCB      0xd7,0x03,0xda,0x10
000180  e000              DCB      0xe0,0x00
                  ov2640_rgb565_reg_tbl
000182  ff00              DCB      0xff,0x00
000184  da09d703          DCB      0xda,0x09,0xd7,0x03
000188  df0233a0          DCB      0xdf,0x02,0x33,0xa0
00018c  3c00e167          DCB      0x3c,0x00,0xe1,0x67
000190  ff01e000          DCB      0xff,0x01,0xe0,0x00
000194  e100e500          DCB      0xe1,0x00,0xe5,0x00
000198  d700da00          DCB      0xd7,0x00,0xda,0x00
00019c  e000              DCB      0xe0,0x00
                  OV2640_AUTOEXPOSURE_LEVEL
00019e  ff01              DCB      0xff,0x01
0001a0  24202518          DCB      0x24,0x20,0x25,0x18
0001a4  2660ff01          DCB      0x26,0x60,0xff,0x01
0001a8  2434251c          DCB      0x24,0x34,0x25,0x1c
0001ac  2600ff01          DCB      0x26,0x00,0xff,0x01
0001b0  243e2538          DCB      0x24,0x3e,0x25,0x38
0001b4  2681ff01          DCB      0x26,0x81,0xff,0x01
0001b8  24482540          DCB      0x24,0x48,0x25,0x40
0001bc  2681ff01          DCB      0x26,0x81,0xff,0x01
0001c0  24582550          DCB      0x24,0x58,0x25,0x50
0001c4  2692              DCB      0x26,0x92

                          AREA ||area_number.18||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.constdata||
                  ov2640_svga_init_reg_tbl
000000  ff002cff          DCB      0xff,0x00,0x2c,0xff
000004  2edfff01          DCB      0x2e,0xdf,0xff,0x01
000008  3c321100          DCB      0x3c,0x32,0x11,0x00
00000c  090204d8          DCB      0x09,0x02,0x04,0xd8
000010  13e51448          DCB      0x13,0xe5,0x14,0x48
000014  2c0c3378          DCB      0x2c,0x0c,0x33,0x78
000018  3a333bfb          DCB      0x3a,0x33,0x3b,0xfb
00001c  3e004311          DCB      0x3e,0x00,0x43,0x11
000020  16103992          DCB      0x16,0x10,0x39,0x92
000024  35da221a          DCB      0x35,0xda,0x22,0x1a
000028  37c32300          DCB      0x37,0xc3,0x23,0x00
00002c  34c0361a          DCB      0x34,0xc0,0x36,0x1a
000030  068807c0          DCB      0x06,0x88,0x07,0xc0
000034  0d870e41          DCB      0x0d,0x87,0x0e,0x41
000038  4c004800          DCB      0x4c,0x00,0x48,0x00
00003c  5b004203          DCB      0x5b,0x00,0x42,0x03
000040  4a812199          DCB      0x4a,0x81,0x21,0x99
000044  24402538          DCB      0x24,0x40,0x25,0x38
000048  26825c00          DCB      0x26,0x82,0x5c,0x00
00004c  63004622          DCB      0x63,0x00,0x46,0x22
000050  0c3c6170          DCB      0x0c,0x3c,0x61,0x70
000054  62807c05          DCB      0x62,0x80,0x7c,0x05
000058  20802830          DCB      0x20,0x80,0x28,0x30
00005c  6c006d80          DCB      0x6c,0x00,0x6d,0x80
000060  6e007002          DCB      0x6e,0x00,0x70,0x02
000064  719473c1          DCB      0x71,0x94,0x73,0xc1
000068  3d345a57          DCB      0x3d,0x34,0x5a,0x57
00006c  12401711          DCB      0x12,0x40,0x17,0x11
000070  18431900          DCB      0x18,0x43,0x19,0x00
000074  1a4b3209          DCB      0x1a,0x4b,0x32,0x09
000078  37c04fca          DCB      0x37,0xc0,0x4f,0xca
00007c  50a85a23          DCB      0x50,0xa8,0x5a,0x23
000080  6d003d38          DCB      0x6d,0x00,0x3d,0x38
000084  ff00e57f          DCB      0xff,0x00,0xe5,0x7f
000088  f9c04124          DCB      0xf9,0xc0,0x41,0x24
00008c  e01476ff          DCB      0xe0,0x14,0x76,0xff
000090  33a04220          DCB      0x33,0xa0,0x42,0x20
000094  43184c00          DCB      0x43,0x18,0x4c,0x00
000098  87d5883f          DCB      0x87,0xd5,0x88,0x3f
00009c  d703d910          DCB      0xd7,0x03,0xd9,0x10
0000a0  d382c808          DCB      0xd3,0x82,0xc8,0x08
0000a4  c9807c00          DCB      0xc9,0x80,0x7c,0x00
0000a8  7d007c03          DCB      0x7d,0x00,0x7c,0x03
0000ac  7d487d48          DCB      0x7d,0x48,0x7d,0x48
0000b0  7c087d20          DCB      0x7c,0x08,0x7d,0x20
0000b4  7d107d0e          DCB      0x7d,0x10,0x7d,0x0e
0000b8  9000910e          DCB      0x90,0x00,0x91,0x0e
0000bc  911a9131          DCB      0x91,0x1a,0x91,0x31
0000c0  915a9169          DCB      0x91,0x5a,0x91,0x69
0000c4  9175917e          DCB      0x91,0x75,0x91,0x7e
0000c8  9188918f          DCB      0x91,0x88,0x91,0x8f
0000cc  919691a3          DCB      0x91,0x96,0x91,0xa3
0000d0  91af91c4          DCB      0x91,0xaf,0x91,0xc4
0000d4  91d791e8          DCB      0x91,0xd7,0x91,0xe8
0000d8  91209200          DCB      0x91,0x20,0x92,0x00
0000dc  930693e3          DCB      0x93,0x06,0x93,0xe3
0000e0  93059305          DCB      0x93,0x05,0x93,0x05
0000e4  93009304          DCB      0x93,0x00,0x93,0x04
0000e8  93009300          DCB      0x93,0x00,0x93,0x00
0000ec  93009300          DCB      0x93,0x00,0x93,0x00
0000f0  93009300          DCB      0x93,0x00,0x93,0x00
0000f4  93009600          DCB      0x93,0x00,0x96,0x00
0000f8  97089719          DCB      0x97,0x08,0x97,0x19
0000fc  9702970c          DCB      0x97,0x02,0x97,0x0c
000100  97249730          DCB      0x97,0x24,0x97,0x30
000104  97289726          DCB      0x97,0x28,0x97,0x26
000108  97029798          DCB      0x97,0x02,0x97,0x98
00010c  97809700          DCB      0x97,0x80,0x97,0x00
000110  9700c3ed          DCB      0x97,0x00,0xc3,0xed
000114  a400a800          DCB      0xa4,0x00,0xa8,0x00
000118  c511c651          DCB      0xc5,0x11,0xc6,0x51
00011c  bf80c710          DCB      0xbf,0x80,0xc7,0x10
000120  b666b8a5          DCB      0xb6,0x66,0xb8,0xa5
000124  b764b97c          DCB      0xb7,0x64,0xb9,0x7c
000128  b3afb497          DCB      0xb3,0xaf,0xb4,0x97
00012c  b5ffb0c5          DCB      0xb5,0xff,0xb0,0xc5
000130  b194b20f          DCB      0xb1,0x94,0xb2,0x0f
000134  c45cc064          DCB      0xc4,0x5c,0xc0,0x64
000138  c14b8c00          DCB      0xc1,0x4b,0x8c,0x00
00013c  863d5000          DCB      0x86,0x3d,0x50,0x00
000140  51c85296          DCB      0x51,0xc8,0x52,0x96
000144  53005400          DCB      0x53,0x00,0x54,0x00
000148  55005ac8          DCB      0x55,0x00,0x5a,0xc8
00014c  5b965c00          DCB      0x5b,0x96,0x5c,0x00
000150  d302c3ed          DCB      0xd3,0x02,0xc3,0xed
000154  7f00da09          DCB      0x7f,0x00,0xda,0x09
000158  e51fe167          DCB      0xe5,0x1f,0xe1,0x67
00015c  e000dd7f          DCB      0xe0,0x00,0xdd,0x7f
000160  0500              DCB      0x05,0x00
