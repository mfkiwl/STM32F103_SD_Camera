; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\apps.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\apps.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\SPI -I..\HARDWARE\MMC_SD -I..\HARDWARE\SPI -I..\HARDWARE\LED -I..\HARDWARE\WNOTEPAD -I..\HARDWARE\RTC -I..\FATFS -I..\FATFS\option -I..\HARDWARE\USART3 -I..\APPS -I..\HARDWARE\OV2640 -I..\HARDWARE\24LC1024 -I..\HARDWARE\RAM -I.\RTE\_Target_1 -ID:\EmbeddedTools\MDK51_RAM\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\EmbeddedTools\MDK51_RAM\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\apps.crf ..\APPS\apps.c]
                          THUMB

                          AREA ||i.json_data_config||, CODE, READONLY, ALIGN=1

                  json_data_config PROC
;;;153    //处理配置文件获取数值
;;;154    void json_data_config(char *str,char *R1,char *R2,char *R3,char *R4,char *R5,char *R6)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;155    {
;;;156        uint8_t i;
;;;157        uint8_t comma_num = 0;
000004  2500              MOVS     r5,#0
000006  e9ddba0b          LDRD     r11,r10,[sp,#0x2c]    ;155
00000a  461f              MOV      r7,r3                 ;155
00000c  4690              MOV      r8,r2                 ;155
00000e  4689              MOV      r9,r1                 ;155
000010  4606              MOV      r6,r0                 ;155
;;;158        for (i = 0; i < strlen(str); i++) {
000012  462c              MOV      r4,r5
000014  e060              B        |L1.216|
                  |L1.22|
;;;159            if (str[i] == ':') {
000016  5d30              LDRB     r0,[r6,r4]
000018  283a              CMP      r0,#0x3a
00001a  d15b              BNE      |L1.212|
;;;160                switch (comma_num) {
00001c  2d06              CMP      r5,#6
00001e  d259              BCS      |L1.212|
000020  e8dff005          TBB      [pc,r5]
000024  0312212c          DCB      0x03,0x12,0x21,0x2c
000028  3b4a              DCB      0x3b,0x4a
;;;161                case 0: {
;;;162                    comma_num = 1;
00002a  2501              MOVS     r5,#1
;;;163                    R1[0] = str[i + 1];
00002c  1930              ADDS     r0,r6,r4
00002e  7842              LDRB     r2,[r0,#1]
000030  f8892000          STRB     r2,[r9,#0]
;;;164                    R1[1] = str[i + 2];
000034  7882              LDRB     r2,[r0,#2]
000036  f8892001          STRB     r2,[r9,#1]
;;;165                    R1[2] = str[i + 3];
00003a  78c2              LDRB     r2,[r0,#3]
00003c  f8892002          STRB     r2,[r9,#2]
;;;166                    R1[3] = str[i + 4];
000040  7901              LDRB     r1,[r0,#4]
000042  f8891003          STRB     r1,[r9,#3]
;;;167                    break;
000046  e045              B        |L1.212|
;;;168                }
;;;169                case 1: {
;;;170                    comma_num =2;
000048  2502              MOVS     r5,#2
;;;171                    R2[0] = str[i + 1];
00004a  1930              ADDS     r0,r6,r4
00004c  7842              LDRB     r2,[r0,#1]
00004e  f8882000          STRB     r2,[r8,#0]
;;;172                    R2[1] = str[i + 2];
000052  7882              LDRB     r2,[r0,#2]
000054  f8882001          STRB     r2,[r8,#1]
;;;173                    R2[2] = str[i + 3];
000058  78c2              LDRB     r2,[r0,#3]
00005a  f8882002          STRB     r2,[r8,#2]
;;;174                    R2[3] = str[i + 4];
00005e  7901              LDRB     r1,[r0,#4]
000060  f8881003          STRB     r1,[r8,#3]
;;;175                    break;
000064  e036              B        |L1.212|
;;;176                }
;;;177    
;;;178                case 2: {
;;;179                    comma_num =3;
000066  2503              MOVS     r5,#3
;;;180                    R3[0] = str[i + 1];
000068  1930              ADDS     r0,r6,r4
00006a  7841              LDRB     r1,[r0,#1]
00006c  7039              STRB     r1,[r7,#0]
;;;181                    R3[1] = str[i + 2];
00006e  7881              LDRB     r1,[r0,#2]
000070  7079              STRB     r1,[r7,#1]
;;;182                    R3[2] = str[i + 3];
000072  78c1              LDRB     r1,[r0,#3]
000074  70b9              STRB     r1,[r7,#2]
;;;183                    R3[3] = str[i + 4];
000076  7900              LDRB     r0,[r0,#4]
000078  70f8              STRB     r0,[r7,#3]
;;;184                    break;
00007a  e02b              B        |L1.212|
;;;185                }
;;;186    
;;;187                case 3: {
;;;188                    comma_num += 1;
00007c  2504              MOVS     r5,#4
;;;189                    R4[0] = str[i + 1];
00007e  1930              ADDS     r0,r6,r4
000080  990a              LDR      r1,[sp,#0x28]
000082  7842              LDRB     r2,[r0,#1]
000084  700a              STRB     r2,[r1,#0]
;;;190                    R4[1] = str[i + 2];
000086  990a              LDR      r1,[sp,#0x28]
000088  7882              LDRB     r2,[r0,#2]
00008a  704a              STRB     r2,[r1,#1]
;;;191                    R4[2] = str[i + 3];
00008c  990a              LDR      r1,[sp,#0x28]
00008e  78c2              LDRB     r2,[r0,#3]
000090  708a              STRB     r2,[r1,#2]
;;;192                    R4[3] = str[i + 4];
000092  7901              LDRB     r1,[r0,#4]
000094  980a              LDR      r0,[sp,#0x28]
000096  70c1              STRB     r1,[r0,#3]
;;;193                    break;
000098  e01c              B        |L1.212|
;;;194                }
;;;195    
;;;196                case 4: {
;;;197                    comma_num =5;
00009a  2505              MOVS     r5,#5
;;;198                    R5[0] = str[i + 1];
00009c  1930              ADDS     r0,r6,r4
00009e  7842              LDRB     r2,[r0,#1]
0000a0  f88b2000          STRB     r2,[r11,#0]
;;;199                    R5[1] = str[i + 2];
0000a4  7882              LDRB     r2,[r0,#2]
0000a6  f88b2001          STRB     r2,[r11,#1]
;;;200                    R5[2] = str[i + 3];
0000aa  78c2              LDRB     r2,[r0,#3]
0000ac  f88b2002          STRB     r2,[r11,#2]
;;;201                    R5[3] = str[i + 4];
0000b0  7901              LDRB     r1,[r0,#4]
0000b2  f88b1003          STRB     r1,[r11,#3]
;;;202                    break;
0000b6  e00d              B        |L1.212|
;;;203                }
;;;204    
;;;205                case 5: {
;;;206                    comma_num = 0;
0000b8  2500              MOVS     r5,#0
;;;207                    R6[0] = str[i + 1];
0000ba  1930              ADDS     r0,r6,r4
0000bc  7842              LDRB     r2,[r0,#1]
0000be  f88a2000          STRB     r2,[r10,#0]
;;;208                    R6[1] = str[i + 2];
0000c2  7882              LDRB     r2,[r0,#2]
0000c4  f88a2001          STRB     r2,[r10,#1]
;;;209                    R6[2] = str[i + 3];
0000c8  78c2              LDRB     r2,[r0,#3]
0000ca  f88a2002          STRB     r2,[r10,#2]
;;;210                    R6[3] = str[i + 4];
0000ce  7901              LDRB     r1,[r0,#4]
0000d0  f88a1003          STRB     r1,[r10,#3]
                  |L1.212|
0000d4  1c64              ADDS     r4,r4,#1
0000d6  b2e4              UXTB     r4,r4                 ;158
                  |L1.216|
0000d8  4630              MOV      r0,r6                 ;158
0000da  f7fffffe          BL       strlen
0000de  42a0              CMP      r0,r4                 ;158
0000e0  d899              BHI      |L1.22|
;;;211                    break;
;;;212                }
;;;213    
;;;214                }
;;;215            } else
;;;216                continue;
;;;217        }
;;;218    }
0000e2  e8bd9ff0          POP      {r4-r12,pc}
;;;219    
                          ENDP


                          AREA ||i.ov2640_jpg_photo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_widthprec
                  ov2640_jpg_photo PROC
;;;48     //    其他,错误代码
;;;49     void ov2640_jpg_photo(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;50     {
;;;51         u32 i=0;
000004  2600              MOVS     r6,#0
;;;52         //u8 jpg_frame_data_temp;
;;;53         u32 jpeglen=0;
000006  4634              MOV      r4,r6
;;;54         u8* pbuf;
;;;55         uint8_t j=0;
;;;56         //jpg_frame_data_length = 0;
;;;57         OV2640_JPEG_Mode();//切换为JPEG模式
000008  f7fffffe          BL       OV2640_JPEG_Mode
;;;58         OV2640_OutSize_Set(OV2640_JPEG_WIDTH,OV2640_JPEG_HEIGHT); //设置图片尺寸
00000c  f44f7116          MOV      r1,#0x258
000010  f44f7048          MOV      r0,#0x320
000014  f7fffffe          BL       OV2640_OutSize_Set
;;;59         //ov2640_speed_ctrl();
;;;60         SCCB_WR_Reg(0XFF,0X00);
000018  2100              MOVS     r1,#0
00001a  20ff              MOVS     r0,#0xff
00001c  f7fffffe          BL       SCCB_WR_Reg
;;;61         SCCB_WR_Reg(0XD3,30);
000020  211e              MOVS     r1,#0x1e
000022  20d3              MOVS     r0,#0xd3
000024  f7fffffe          BL       SCCB_WR_Reg
;;;62         SCCB_WR_Reg(0XFF,0X01);
000028  2101              MOVS     r1,#1
00002a  20ff              MOVS     r0,#0xff
00002c  f7fffffe          BL       SCCB_WR_Reg
;;;63         SCCB_WR_Reg(0X11,0X1);
000030  2101              MOVS     r1,#1
000032  2011              MOVS     r0,#0x11
000034  f7fffffe          BL       SCCB_WR_Reg
;;;64         LED_Green=1;  //亮
000038  4d3e              LDR      r5,|L2.308|
00003a  f04f0801          MOV      r8,#1
00003e  f8c581a4          STR      r8,[r5,#0x1a4]
;;;65         for(i=0; i<10; i++) {	//丢弃10帧，等待OV2640自动调节好（曝光白平衡之类的）
;;;66             while(OV2640_VSYNC==1);
;;;67             while(OV2640_VSYNC==0);
;;;68         }
;;;69         while(OV2640_VSYNC==1) {	//开始采集jpeg数据
;;;70             while(OV2640_HREF) {
;;;71                 while(OV2640_PCLK==0);
000042  483d              LDR      r0,|L2.312|
000044  4b3d              LDR      r3,|L2.316|
                  |L2.70|
000046  f8d31100          LDR      r1,[r3,#0x100]        ;66
00004a  2901              CMP      r1,#1                 ;66
00004c  d0fb              BEQ      |L2.70|
                  |L2.78|
00004e  f8d31100          LDR      r1,[r3,#0x100]        ;67
000052  2900              CMP      r1,#0                 ;67
000054  d0fb              BEQ      |L2.78|
000056  1c76              ADDS     r6,r6,#1              ;67
000058  2e0a              CMP      r6,#0xa               ;65
00005a  d3f4              BCC      |L2.70|
;;;72                 ov2640_framebuf[jpeglen]=OV2640_DATA;
00005c  4e38              LDR      r6,|L2.320|
00005e  4939              LDR      r1,|L2.324|
                  |L2.96|
000060  f8d32100          LDR      r2,[r3,#0x100]        ;69
000064  2a01              CMP      r2,#1                 ;69
000066  d014              BEQ      |L2.146|
;;;73                 while(OV2640_PCLK==1);
;;;74                 jpeglen++;
;;;75             }
;;;76         }
;;;77         LED_Green=0;  //灭
000068  2700              MOVS     r7,#0
00006a  f8c571a4          STR      r7,[r5,#0x1a4]
;;;78         printf("jpeg data size: %d \r\n",jpeglen);
00006e  4621              MOV      r1,r4
000070  a035              ADR      r0,|L2.328|
000072  f7fffffe          BL       __2printf
;;;79         pbuf = (uint8_t *)ov2640_framebuf;
000076  4833              LDR      r0,|L2.324|
;;;80         for(i=0; i<jpeglen; i++) { //查找0XFF,0XD8
000078  2600              MOVS     r6,#0
00007a  e017              B        |L2.172|
                  |L2.124|
00007c  f8d02120          LDR      r2,[r0,#0x120]        ;71
000080  2a00              CMP      r2,#0                 ;71
000082  d0fb              BEQ      |L2.124|
000084  68b2              LDR      r2,[r6,#8]            ;72
000086  550a              STRB     r2,[r1,r4]            ;72
                  |L2.136|
000088  f8d02120          LDR      r2,[r0,#0x120]        ;73
00008c  2a01              CMP      r2,#1                 ;73
00008e  d0fb              BEQ      |L2.136|
000090  1c64              ADDS     r4,r4,#1              ;73
                  |L2.146|
000092  f8d32104          LDR      r2,[r3,#0x104]        ;70
000096  2a00              CMP      r2,#0                 ;70
000098  d0e2              BEQ      |L2.96|
00009a  e7ef              B        |L2.124|
                  |L2.156|
;;;81             if((pbuf[i]==0XFF)&&(pbuf[i+1]==0XD8))
00009c  5d81              LDRB     r1,[r0,r6]
00009e  29ff              CMP      r1,#0xff
0000a0  d103              BNE      |L2.170|
0000a2  1981              ADDS     r1,r0,r6
0000a4  7849              LDRB     r1,[r1,#1]
0000a6  29d8              CMP      r1,#0xd8
0000a8  d002              BEQ      |L2.176|
                  |L2.170|
0000aa  1c76              ADDS     r6,r6,#1
                  |L2.172|
0000ac  42a6              CMP      r6,r4                 ;80
0000ae  d3f5              BCC      |L2.156|
                  |L2.176|
;;;82                 break;
;;;83         }
;;;84         if(i==jpeglen) {
0000b0  42a6              CMP      r6,r4
0000b2  d114              BNE      |L2.222|
;;;85             for(j=0; j<5; j++) {
0000b4  2400              MOVS     r4,#0
0000b6  4646              MOV      r6,r8                 ;62
                  |L2.184|
;;;86                 LED_Red=1;
0000b8  f8c561a0          STR      r6,[r5,#0x1a0]
;;;87                 delay_ms(50);
0000bc  2032              MOVS     r0,#0x32
0000be  f7fffffe          BL       delay_ms
;;;88                 LED_Green=0;
0000c2  f8c571a4          STR      r7,[r5,#0x1a4]
;;;89                 delay_ms(50);
0000c6  2032              MOVS     r0,#0x32
0000c8  f7fffffe          BL       delay_ms
0000cc  1c64              ADDS     r4,r4,#1
0000ce  b2e4              UXTB     r4,r4                 ;85
0000d0  2c05              CMP      r4,#5                 ;85
0000d2  d3f1              BCC      |L2.184|
;;;90             }
;;;91             printf("没找到0XFF,0XD8......\r\n");//没找到0XFF,0XD8
0000d4  e8bd41f0          POP      {r4-r8,lr}
0000d8  a021              ADR      r0,|L2.352|
0000da  f7ffbffe          B.W      __2printf
                  |L2.222|
;;;92         } else {	//找到了
;;;93             LED_Green=0;  //灭
0000de  f8c571a4          STR      r7,[r5,#0x1a4]
;;;94             pbuf+=i;//偏移到0XFF,0XD8处
;;;95             sprintf(ovname,"Photo_Times:%4d\r\n",fphotos); // 配置文件的数据记录情况6
0000e2  4f25              LDR      r7,|L2.376|
0000e4  1985              ADDS     r5,r0,r6              ;94
0000e6  a125              ADR      r1,|L2.380|
0000e8  4829              LDR      r0,|L2.400|
0000ea  683a              LDR      r2,[r7,#0]  ; fphotos
0000ec  f7fffffe          BL       __2sprintf
;;;96             Test_f_writefile("config.ini",ovname,rmove_data_conf,strlen(ovname)); //配置文件写入 覆盖Read_times
0000f0  4827              LDR      r0,|L2.400|
0000f2  f7fffffe          BL       strlen
0000f6  4603              MOV      r3,r0
0000f8  4826              LDR      r0,|L2.404|
0000fa  4925              LDR      r1,|L2.400|
0000fc  6802              LDR      r2,[r0,#0]  ; rmove_data_conf
0000fe  a026              ADR      r0,|L2.408|
000100  f7fffffe          BL       Test_f_writefile
;;;97             printf("Write Photos:%4d OK!\r\n",fphotos);
000104  a027              ADR      r0,|L2.420|
000106  6839              LDR      r1,[r7,#0]  ; fphotos
000108  f7fffffe          BL       __2printf
;;;98             sprintf(ovtemp,"picture/IMG_%d.jpg",fphotos);
00010c  4820              LDR      r0,|L2.400|
00010e  a12b              ADR      r1,|L2.444|
000110  3028              ADDS     r0,r0,#0x28
000112  683a              LDR      r2,[r7,#0]  ; fphotos
000114  f7fffffe          BL       __2sprintf
;;;99             Test_f_writefile(ovtemp,(char *)pbuf,0,jpeglen-i); //配置文件写入
000118  481d              LDR      r0,|L2.400|
00011a  1ba4              SUBS     r4,r4,r6
00011c  4623              MOV      r3,r4
00011e  2200              MOVS     r2,#0
000120  4629              MOV      r1,r5
000122  3028              ADDS     r0,r0,#0x28
000124  f7fffffe          BL       Test_f_writefile
000128  4621              MOV      r1,r4
;;;100            printf("photo data is: %d \r\n",jpeglen-i);
00012a  e8bd41f0          POP      {r4-r8,lr}
00012e  a028              ADR      r0,|L2.464|
000130  f7ffbffe          B.W      __2printf
;;;101        }
;;;102        /*
;;;103        while(OV2640_VSYNC == 1) {
;;;104            while(OV2640_HREF) {
;;;105                while(OV2640_PCLK == 0);
;;;106                jpg_frame_data_temp = (u8)OV2640_DATA;
;;;107                jpg_frame_data_byte_new = jpg_frame_data_temp;
;;;108                if( (jpg_frame_data_start == 0) && (jpg_frame_data_byte_old == 0xFF) && (jpg_frame_data_byte_new == 0xD8) ) {
;;;109                    jpeg_buf[0] = 0xFF;
;;;110                    jpeg_buf[1] = 0xD8;
;;;111                    jpg_frame_data_start = 1;
;;;112                    jpg_frame_data_length = 2;
;;;113                } else if(jpg_frame_data_start == 1) {
;;;114                    if(jpg_frame_data_length < 0XE678) {
;;;115                        jpeg_buf[jpg_frame_data_length] = jpg_frame_data_byte_new;
;;;116                        jpg_frame_data_length ++;
;;;117                        if( (jpg_frame_data_byte_old == 0xFF) && (jpg_frame_data_byte_new == 0xD9) ) {
;;;118                            jpg_frame_data_start = 0;
;;;119                        }
;;;120                    }
;;;121                }
;;;122                jpg_frame_data_byte_old = jpg_frame_data_byte_new;
;;;123                while(OV2640_PCLK == 1);
;;;124            }
;;;125        }
;;;126    
;;;127        LED_Green=0;  //灭
;;;128        sprintf(ovname,"Photo_Times:%4d\r\n",fphotos); // 配置文件的数据记录情况
;;;129        Test_f_writefile("config.ini",ovname,rmove_data_conf,strlen(ovname)); //配置文件写入 覆盖Read_times
;;;130        printf("Write Photos:%4d OK!\r\n",fphotos);
;;;131        sprintf(ovtemp,"picture/IMG_%d.jpg",fphotos);
;;;132        Test_f_writefile(ovtemp,(char *)jpeg_buf,0,jpg_frame_data_length); //配置文件写入
;;;133        printf("photo data is: %d \r\n",jpg_frame_data_length);
;;;134        jpg_frame_data_length=0;
;;;135        */
;;;136    }
;;;137    
                          ENDP

                  |L2.308|
                          DCD      0x42220000
                  |L2.312|
                          DCD      0x42218000
                  |L2.316|
                          DCD      0x42210000
                  |L2.320|
                          DCD      0x40011000
                  |L2.324|
                          DCD      ||.bss||
                  |L2.328|
000148  6a706567          DCB      "jpeg data size: %d \r\n",0
00014c  20646174
000150  61207369
000154  7a653a20
000158  2564200d
00015c  0a00    
00015e  00                DCB      0
00015f  00                DCB      0
                  |L2.352|
000160  c3bbd5d2          DCB      195,187,213,210,181,189,"0XFF,0XD8......\r\n",0
000164  b5bd3058
000168  46462c30
00016c  5844382e
000170  2e2e2e2e
000174  2e0d0a00
                  |L2.376|
                          DCD      fphotos
                  |L2.380|
00017c  50686f74          DCB      "Photo_Times:%4d\r\n",0
000180  6f5f5469
000184  6d65733a
000188  2534640d
00018c  0a00    
00018e  00                DCB      0
00018f  00                DCB      0
                  |L2.400|
                          DCD      ||.bss||+0xea60
                  |L2.404|
                          DCD      rmove_data_conf
                  |L2.408|
000198  636f6e66          DCB      "config.ini",0
00019c  69672e69
0001a0  6e6900  
0001a3  00                DCB      0
                  |L2.420|
0001a4  57726974          DCB      "Write Photos:%4d OK!\r\n",0
0001a8  65205068
0001ac  6f746f73
0001b0  3a253464
0001b4  204f4b21
0001b8  0d0a00  
0001bb  00                DCB      0
                  |L2.444|
0001bc  70696374          DCB      "picture/IMG_%d.jpg",0
0001c0  7572652f
0001c4  494d475f
0001c8  25642e6a
0001cc  706700  
0001cf  00                DCB      0
                  |L2.464|
0001d0  70686f74          DCB      "photo data is: %d \r\n",0
0001d4  6f206461
0001d8  74612069
0001dc  733a2025
0001e0  64200d0a
0001e4  00      
0001e5  00                DCB      0
0001e6  00                DCB      0
0001e7  00                DCB      0

                          AREA ||i.ov2640_speed_ctrl||, CODE, READONLY, ALIGN=1

                  ov2640_speed_ctrl PROC
;;;33     //根据LCD分辨率的不同，设置不同的参数
;;;34     void ov2640_speed_ctrl(void)
000000  b570              PUSH     {r4-r6,lr}
;;;35     {
;;;36         u8 clkdiv,pclkdiv;			//时钟分频系数和PCLK分频系数
;;;37         clkdiv=15;  //15  20
000002  240f              MOVS     r4,#0xf
;;;38         pclkdiv=10;  //4   25
000004  250a              MOVS     r5,#0xa
;;;39         SCCB_WR_Reg(0XFF,0X00);
000006  2100              MOVS     r1,#0
000008  20ff              MOVS     r0,#0xff
00000a  f7fffffe          BL       SCCB_WR_Reg
;;;40         SCCB_WR_Reg(0XD3,pclkdiv);	//设置PCLK分频
00000e  4629              MOV      r1,r5
000010  20d3              MOVS     r0,#0xd3
000012  f7fffffe          BL       SCCB_WR_Reg
;;;41         SCCB_WR_Reg(0XFF,0X01);
000016  2101              MOVS     r1,#1
000018  20ff              MOVS     r0,#0xff
00001a  f7fffffe          BL       SCCB_WR_Reg
;;;42         SCCB_WR_Reg(0X11,clkdiv);	//设置CLK分频
00001e  4621              MOV      r1,r4
000020  e8bd4070          POP      {r4-r6,lr}
000024  2011              MOVS     r0,#0x11
000026  f7ffbffe          B.W      SCCB_WR_Reg
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.usart3_data_analysis||, CODE, READONLY, ALIGN=2

                  usart3_data_analysis PROC
;;;221    // 串口3接收到的消息
;;;222    void usart3_data_analysis(void)
000000  b570              PUSH     {r4-r6,lr}
;;;223    {
;;;224        uint16_t cra16_check_Data=0;
;;;225        uint16_t cra16_rec_Data=0;
;;;226        uint16_t len=0;
;;;227    
;;;228        if(USART3_RX_STA&0x8000) {
000002  4e28              LDR      r6,|L4.164|
000004  f04f0500          MOV      r5,#0
000008  8830              LDRH     r0,[r6,#0]  ; USART3_RX_STA
00000a  0401              LSLS     r1,r0,#16
00000c  d52f              BPL      |L4.110|
;;;229            len=USART3_RX_STA&0x3FFF;   //得到此次接收到的数据长度
00000e  f3c0040d          UBFX     r4,r0,#0,#14
;;;230            printf("Receive Data OK\r\n");
000012  a025              ADR      r0,|L4.168|
000014  f7fffffe          BL       __2printf
;;;231            cra16_rec_Data = crc16((char *)USART3_RX_BUF,len-2);
000018  1ea0              SUBS     r0,r4,#2
00001a  b2c1              UXTB     r1,r0
00001c  4827              LDR      r0,|L4.188|
00001e  f7fffffe          BL       crc16
;;;232            cra16_check_Data = USART3_RX_BUF[len-2]<<8|USART3_RX_BUF[len-1];
000022  4b26              LDR      r3,|L4.188|
000024  1919              ADDS     r1,r3,r4
000026  f8312c02          LDRH     r2,[r1,#-2]
00002a  ba52              REV16    r2,r2
;;;233            if(cra16_rec_Data == cra16_check_Data) {
00002c  4290              CMP      r0,r2
00002e  d10b              BNE      |L4.72|
;;;234                USART3_RX_BUF[len-2] = 0x0d;
000030  200d              MOVS     r0,#0xd
000032  f8010d02          STRB     r0,[r1,#-2]!
;;;235                USART3_RX_BUF[len-1] = 0x0a;
000036  200a              MOVS     r0,#0xa
000038  7048              STRB     r0,[r1,#1]
;;;236                USART3_RX_BUF[len] = '\0';
00003a  551d              STRB     r5,[r3,r4]
;;;237                if(SD_Initialize() == 0) {
00003c  f7fffffe          BL       SD_Initialize
000040  b120              CBZ      r0,|L4.76|
;;;238                    printf("Write data to Excel OK!!!\r\n");
;;;239                    Test_f_writefile(ftmp,(char *)USART3_RX_BUF,rmove_data_num,len);
;;;240                    rmove_data_num += strlen((char *)USART3_RX_BUF);
;;;241                } else {
;;;242                    printf("SD Card Failed! Please Check!\r\n");
000042  a01f              ADR      r0,|L4.192|
000044  f7fffffe          BL       __2printf
                  |L4.72|
;;;243                }
;;;244            }
;;;245            USART3_RX_STA=0;
000048  8035              STRH     r5,[r6,#0]
;;;246        } else {
;;;247            if(times == 50) {
;;;248                if(SD_Initialize() != 0) {
;;;249                    LED_Red=!LED_Red;
;;;250                    printf("Check SD Card Failed!!\r\n");
;;;251                } else
;;;252                    LED_Red=0;
;;;253                times=0;
;;;254            }
;;;255            times++;
;;;256        }
;;;257    
;;;258    }
00004a  bd70              POP      {r4-r6,pc}
                  |L4.76|
00004c  a024              ADR      r0,|L4.224|
00004e  f7fffffe          BL       __2printf
000052  4623              MOV      r3,r4                 ;239
000054  4c29              LDR      r4,|L4.252|
000056  4919              LDR      r1,|L4.188|
000058  4829              LDR      r0,|L4.256|
00005a  6822              LDR      r2,[r4,#0]            ;239  ; rmove_data_num
00005c  f7fffffe          BL       Test_f_writefile
000060  4816              LDR      r0,|L4.188|
000062  f7fffffe          BL       strlen
000066  6821              LDR      r1,[r4,#0]            ;240  ; rmove_data_num
000068  4408              ADD      r0,r0,r1              ;240
00006a  6020              STR      r0,[r4,#0]            ;240  ; rmove_data_num
00006c  e7ec              B        |L4.72|
                  |L4.110|
00006e  4c25              LDR      r4,|L4.260|
000070  7820              LDRB     r0,[r4,#0]            ;247  ; times
000072  2832              CMP      r0,#0x32              ;247
000074  d112              BNE      |L4.156|
000076  f7fffffe          BL       SD_Initialize
00007a  4923              LDR      r1,|L4.264|
00007c  b158              CBZ      r0,|L4.150|
00007e  f8d101a0          LDR      r0,[r1,#0x1a0]        ;249
000082  b130              CBZ      r0,|L4.146|
000084  2000              MOVS     r0,#0                 ;249
                  |L4.134|
000086  f8c101a0          STR      r0,[r1,#0x1a0]        ;249
00008a  a020              ADR      r0,|L4.268|
00008c  f7fffffe          BL       __2printf
000090  e003              B        |L4.154|
                  |L4.146|
000092  2001              MOVS     r0,#1                 ;249
000094  e7f7              B        |L4.134|
                  |L4.150|
000096  f8c151a0          STR      r5,[r1,#0x1a0]        ;252
                  |L4.154|
00009a  7025              STRB     r5,[r4,#0]            ;253
                  |L4.156|
00009c  7820              LDRB     r0,[r4,#0]            ;255  ; times
00009e  1c40              ADDS     r0,r0,#1              ;255
0000a0  7020              STRB     r0,[r4,#0]            ;255
0000a2  bd70              POP      {r4-r6,pc}
;;;259    
                          ENDP

                  |L4.164|
                          DCD      USART3_RX_STA
                  |L4.168|
0000a8  52656365          DCB      "Receive Data OK\r\n",0
0000ac  69766520
0000b0  44617461
0000b4  204f4b0d
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L4.188|
                          DCD      USART3_RX_BUF
                  |L4.192|
0000c0  53442043          DCB      "SD Card Failed! Please Check!\r\n",0
0000c4  61726420
0000c8  4661696c
0000cc  65642120
0000d0  506c6561
0000d4  73652043
0000d8  6865636b
0000dc  210d0a00
                  |L4.224|
0000e0  57726974          DCB      "Write data to Excel OK!!!\r\n",0
0000e4  65206461
0000e8  74612074
0000ec  6f204578
0000f0  63656c20
0000f4  4f4b2121
0000f8  210d0a00
                  |L4.252|
                          DCD      rmove_data_num
                  |L4.256|
                          DCD      ftmp
                  |L4.260|
                          DCD      ||.data||
                  |L4.264|
                          DCD      0x42220000
                  |L4.268|
00010c  43686563          DCB      "Check SD Card Failed!!\r\n",0
000110  6b205344
000114  20436172
000118  64204661
00011c  696c6564
000120  21210d0a
000124  00      
000125  00                DCB      0
000126  00                DCB      0
000127  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ov2640_framebuf
                          %        60000
                  ovname
                          %        40
                  ovtemp
                          %        40

                          AREA ||.data||, DATA, ALIGN=0

                  times
000000  00                DCB      0x00

                          AREA ||area_number.9||, DATA, ALIGN=0

                          EXPORTAS ||area_number.9||, ||.data||
                  Read_times1
                          DCDU     0x00000000
000004  00                DCB      0x00

                          AREA ||area_number.10||, DATA, ALIGN=0

                          EXPORTAS ||area_number.10||, ||.data||
                  Read_times2
                          DCDU     0x00000000
000004  00                DCB      0x00

                          AREA ||area_number.11||, DATA, ALIGN=0

                          EXPORTAS ||area_number.11||, ||.data||
                  Read_times3
                          DCDU     0x00000000
000004  00                DCB      0x00

                          AREA ||area_number.12||, DATA, ALIGN=0

                          EXPORTAS ||area_number.12||, ||.data||
                  Read_times4
                          DCDU     0x00000000
000004  00                DCB      0x00

                          AREA ||area_number.13||, DATA, ALIGN=0

                          EXPORTAS ||area_number.13||, ||.data||
                  Read_times5
                          DCDU     0x00000000
000004  00                DCB      0x00

                          AREA ||area_number.14||, DATA, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.data||
                  Read_times6
                          DCDU     0x00000000
000004  00                DCB      0x00
