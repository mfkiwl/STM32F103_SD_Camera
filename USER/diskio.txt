; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\diskio.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\diskio.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\SPI -I..\HARDWARE\MMC_SD -I..\HARDWARE\SPI -I..\HARDWARE\LED -I..\HARDWARE\WNOTEPAD -I..\HARDWARE\RTC -I..\FATFS -I..\FATFS\option -I..\HARDWARE\USART3 -I..\APPS -I..\HARDWARE\OV2640 -I..\HARDWARE\24LC1024 -I..\HARDWARE\RAM -I.\RTE\_Target_1 -ID:\EmbeddedTools\MDK51_RAM\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\EmbeddedTools\MDK51_RAM\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\diskio.crf ..\FATFS\diskio.c]
                          THUMB

                          AREA ||i.disk_initialize||, CODE, READONLY, ALIGN=1

                  disk_initialize PROC
;;;11     //初始化磁盘
;;;12     DSTATUS disk_initialize (
000000  b510              PUSH     {r4,lr}
;;;13     	BYTE drv				/* Physical drive nmuber (0..) */
;;;14     )
;;;15     {	
000002  b918              CBNZ     r0,|L1.12|
;;;16     	u8 res;	    
;;;17     	switch(drv)
;;;18     	{
;;;19     		case SD_CARD://SD卡
;;;20     			res = SD_Initialize();//SD_Initialize();
000004  f7fffffe          BL       SD_Initialize
;;;21     			break;
000008  2800              CMP      r0,#0
00000a  d000              BEQ      |L1.14|
                  |L1.12|
;;;22     		default:
;;;23     			res=1; 
;;;24     	}		 
;;;25     	if(res)return  STA_NOINIT;
00000c  2001              MOVS     r0,#1
                  |L1.14|
;;;26     	else return 0; //初始化成功
;;;27     }   
00000e  bd10              POP      {r4,pc}
;;;28     //获得磁盘状态
                          ENDP


                          AREA ||i.disk_ioctl||, CODE, READONLY, ALIGN=2

                  disk_ioctl PROC
;;;93      //*buff:发送/接收缓冲区指针
;;;94     DRESULT disk_ioctl (
000000  b510              PUSH     {r4,lr}
;;;95     	BYTE drv,		/* Physical drive nmuber (0..) */
;;;96     	BYTE ctrl,		/* Control code */
;;;97     	void *buff		/* Buffer to send/receive control data */
;;;98     )
;;;99     {	
000002  4614              MOV      r4,r2
000004  b108              CBZ      r0,|L2.10|
;;;100    	DRESULT res;						  
;;;101    	if(drv==SD_CARD)//SD卡
;;;102    	{
;;;103    	    switch(ctrl)
;;;104    	    {
;;;105    		    case CTRL_SYNC:
;;;106    				SD_CS=0;
;;;107    		        if(SD_WaitReady()==0)res = RES_OK; 
;;;108    		        else res = RES_ERROR;	  
;;;109    				SD_CS=1;
;;;110    		        break;	 
;;;111    		    case GET_SECTOR_SIZE:
;;;112    		        *(WORD*)buff = 512;
;;;113    		        res = RES_OK;
;;;114    		        break;	 
;;;115    		    case GET_BLOCK_SIZE:
;;;116    		        *(WORD*)buff = 8;
;;;117    		        res = RES_OK;
;;;118    		        break;	 
;;;119    		    case GET_SECTOR_COUNT:
;;;120    		        *(DWORD*)buff = SD_GetSectorCount();
;;;121    		        res = RES_OK;
;;;122    		        break;
;;;123    		    default:
;;;124    		        res = RES_PARERR;
;;;125    		        break;
;;;126    	    }
;;;127    	}else res=RES_ERROR;//其他的不支持
000006  2001              MOVS     r0,#1
;;;128        return res;
;;;129    }   
000008  bd10              POP      {r4,pc}
                  |L2.10|
00000a  b139              CBZ      r1,|L2.28|
00000c  2901              CMP      r1,#1                 ;103
00000e  d018              BEQ      |L2.66|
000010  2902              CMP      r1,#2                 ;103
000012  d00f              BEQ      |L2.52|
000014  2903              CMP      r1,#3                 ;103
000016  d010              BEQ      |L2.58|
000018  2004              MOVS     r0,#4                 ;124
00001a  bd10              POP      {r4,pc}
                  |L2.28|
00001c  4c0b              LDR      r4,|L2.76|
00001e  2000              MOVS     r0,#0                 ;106
000020  f8c4018c          STR      r0,[r4,#0x18c]        ;106
000024  f7fffffe          BL       SD_WaitReady
000028  b100              CBZ      r0,|L2.44|
00002a  2001              MOVS     r0,#1                 ;108
                  |L2.44|
00002c  2101              MOVS     r1,#1                 ;109
00002e  f8c4118c          STR      r1,[r4,#0x18c]        ;109
000032  bd10              POP      {r4,pc}
                  |L2.52|
000034  f44f7000          MOV      r0,#0x200             ;112
000038  e000              B        |L2.60|
                  |L2.58|
00003a  2008              MOVS     r0,#8                 ;116
                  |L2.60|
00003c  8010              STRH     r0,[r2,#0]            ;112
                  |L2.62|
00003e  2000              MOVS     r0,#0                 ;113
000040  bd10              POP      {r4,pc}
                  |L2.66|
000042  f7fffffe          BL       SD_GetSectorCount
000046  6020              STR      r0,[r4,#0]            ;122
000048  e7f9              B        |L2.62|
;;;130    //获得时间
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      0x42210000

                          AREA ||i.disk_read||, CODE, READONLY, ALIGN=1

                  disk_read PROC
;;;39      //count:需要读取的扇区数
;;;40     DRESULT disk_read (
000000  b570              PUSH     {r4-r6,lr}
;;;41     	BYTE drv,		/* Physical drive nmuber (0..) */
;;;42     	BYTE *buff,		/* Data buffer to store read data */
;;;43     	DWORD sector,	/* Sector address (LBA) */
;;;44     	BYTE count		/* Number of sectors to read (1..255) */
;;;45     )
;;;46     {
000002  4614              MOV      r4,r2
000004  460d              MOV      r5,r1
000006  b10b              CBZ      r3,|L3.12|
;;;47     	u8 res=0; 
;;;48         if (!count)return RES_PARERR;//count不能等于0，否则返回参数错误		 	 
;;;49     	switch(drv)
000008  b948              CBNZ     r0,|L3.30|
00000a  e001              B        |L3.16|
                  |L3.12|
00000c  2004              MOVS     r0,#4                 ;48
                  |L3.14|
;;;50     	{
;;;51     		case SD_CARD://SD卡
;;;52     			res=SD_ReadDisk(buff,sector,count);
;;;53     			break;
;;;54     		default:
;;;55     			res=1; 
;;;56     	}
;;;57         //处理返回值，将SPI_SD_driver.c的返回值转成ff.c的返回值
;;;58         if(res == 0x00)return RES_OK;	 
;;;59         else return RES_ERROR;	   
;;;60     }  
00000e  bd70              POP      {r4-r6,pc}
                  |L3.16|
000010  461a              MOV      r2,r3                 ;52
000012  4621              MOV      r1,r4                 ;52
000014  4628              MOV      r0,r5                 ;52
000016  f7fffffe          BL       SD_ReadDisk
00001a  2800              CMP      r0,#0                 ;53
00001c  d0f7              BEQ      |L3.14|
                  |L3.30|
00001e  2001              MOVS     r0,#1                 ;59
000020  bd70              POP      {r4-r6,pc}
;;;61      //写扇区
                          ENDP


                          AREA ||i.disk_status||, CODE, READONLY, ALIGN=1

                  disk_status PROC
;;;28     //获得磁盘状态
;;;29     DSTATUS disk_status (
000000  2000              MOVS     r0,#0
;;;30     	BYTE drv		/* Physical drive nmuber (0..) */
;;;31     )
;;;32     {		   
;;;33         return 0;
;;;34     }
000002  4770              BX       lr
;;;35      //读扇区
                          ENDP


                          AREA ||i.disk_write||, CODE, READONLY, ALIGN=1

                  disk_write PROC
;;;66     #if _READONLY == 0
;;;67     DRESULT disk_write (
000000  b570              PUSH     {r4-r6,lr}
;;;68     	BYTE drv,			/* Physical drive nmuber (0..) */
;;;69     	const BYTE *buff,	        /* Data to be written */
;;;70     	DWORD sector,		/* Sector address (LBA) */
;;;71     	BYTE count			/* Number of sectors to write (1..255) */
;;;72     )
;;;73     {
000002  4614              MOV      r4,r2
000004  460d              MOV      r5,r1
000006  b10b              CBZ      r3,|L5.12|
;;;74     	u8 res=0;  
;;;75         if (!count)return RES_PARERR;//count不能等于0，否则返回参数错误		 	 
;;;76     	switch(drv)
000008  b948              CBNZ     r0,|L5.30|
00000a  e001              B        |L5.16|
                  |L5.12|
00000c  2004              MOVS     r0,#4                 ;75
                  |L5.14|
;;;77     	{
;;;78     		case SD_CARD://SD卡
;;;79     			res=SD_WriteDisk((u8*)buff,sector,count);
;;;80     			break;
;;;81     		default:
;;;82     			res=1; 
;;;83     	}
;;;84          //处理返回值，将SPI_SD_driver.c的返回值转成ff.c的返回值
;;;85         if(res == 0x00)return RES_OK;	 
;;;86         else return RES_ERROR;		 
;;;87     }
00000e  bd70              POP      {r4-r6,pc}
                  |L5.16|
000010  461a              MOV      r2,r3                 ;79
000012  4621              MOV      r1,r4                 ;79
000014  4628              MOV      r0,r5                 ;79
000016  f7fffffe          BL       SD_WriteDisk
00001a  2800              CMP      r0,#0                 ;80
00001c  d0f7              BEQ      |L5.14|
                  |L5.30|
00001e  2001              MOVS     r0,#1                 ;86
000020  bd70              POP      {r4-r6,pc}
;;;88     #endif /* _READONLY */
                          ENDP


                          AREA ||i.get_fattime||, CODE, READONLY, ALIGN=1

                  get_fattime PROC
;;;133    //15-11: Hour(0-23), 10-5: Minute(0-59), 4-0: Second(0-29 *2) */                                                                                                                                                                                                                                                
;;;134    DWORD get_fattime (void)
000000  2000              MOVS     r0,#0
;;;135    {
;;;136    	return 0;
;;;137    }
000002  4770              BX       lr
;;;138    
                          ENDP

