#include "string.h"
#include "sys.h"
#include "delay.h"
#include "usart.h"
#include "USART3.h"
#include "apps.h"
#include "MMC_SD.h"
#include "ff.h"
#include "TEST_FATFS.h"
#include "ov2640.h"


u8 times=0; // 计时器
u8* ov2640_framebuf;				//帧缓存
uint8_t Read_times1[5];//第一段配置变量
uint8_t Read_times2[5];//第二段配置变量
uint8_t Read_times3[5];//第三段配置变量
uint8_t Read_times4[5];//第四段配置变量
uint8_t Read_times5[5];//第五段配置变量
uint8_t Read_times6[5];//第六段配置变量


uint8_t ov2640_jpg_photo(u8 *pathname) {
    u8 res=0;
    u32 i=0,n;
    u32 jpeglen=0;

    OV2640_JPEG_Mode();//切换为JPEG模式
    OV2640_OutSize_Set(OV2640_JPEG_WIDTH,OV2640_JPEG_HEIGHT); //设置图片尺寸
    SCCB_WR_Reg(0XFF,0X00);  //不知道能不能删除
    SCCB_WR_Reg(0XD3,30);//不知道能不能删除
    SCCB_WR_Reg(0XFF,0X01);//不知道能不能删除
    SCCB_WR_Reg(0X11,0X1);  //不知道能不能删除

    for(i=0; i<10; i++) {	//丢弃10帧，等待OV2640自动调节好（曝光白平衡之类的）
        while(OV2640_VSYNC==1);
        while(OV2640_VSYNC==0);
    }
    while(OV2640_VSYNC==1) {	//开始采集jpeg数据
        while(OV2640_HREF) {
            while(OV2640_PCLK==0);
            ov2640_framebuf[jpeglen]=OV2640_DATA;
            while(OV2640_PCLK==1);
            jpeglen++;
        }
    }
    printf("jpeg data size:%d\r\n",jpeglen);	//串口打印JPEG文件大小
    //pbuf = (u8*)ov2640_framebuf;
    for(i=0; i<jpeglen; i++) { //查找0XFF,0XD8
        if((ov2640_framebuf[i]==0XFF)&&(ov2640_framebuf[i+1]==0XD8))break;
    }
    if(i==jpeglen) {
        res=0XFD;//没找到0XFF,0XD8
        printf("no data is found\r\n");
    } else {	//找到了
        printf("Found is : %d\r\n",i);
				for(n=0;n<jpeglen;n++)
				{
					if((ov2640_framebuf[n]==0XD9) && (ov2640_framebuf[n-1]==0XFF))
					{
						//存储到SD卡里
						break;
					}
				}
    }
}


//处理配置文件获取数值
void json_data_config(char *str,char *R1,char *R2,char *R3,char *R4,char *R5,char *R6) {
    uint8_t i;
    uint8_t comma_num = 0;
    for (i = 0; i < strlen(str); i++) {
        if (str[i] == ':') {
            switch (comma_num) {
            case 0: {
                comma_num = 1;
                R1[0] = str[i + 1];
                R1[1] = str[i + 2];
                R1[2] = str[i + 3];
                R1[3] = str[i + 4];
                break;
            }
            case 1: {
                comma_num =2;
                R2[0] = str[i + 1];
                R2[1] = str[i + 2];
                R2[2] = str[i + 3];
                R2[3] = str[i + 4];
                break;
            }

            case 2: {
                comma_num =3;
                R3[0] = str[i + 1];
                R3[1] = str[i + 2];
                R3[2] = str[i + 3];
                R3[3] = str[i + 4];
                break;
            }

            case 3: {
                comma_num += 1;
                R4[0] = str[i + 1];
                R4[1] = str[i + 2];
                R4[2] = str[i + 3];
                R4[3] = str[i + 4];
                break;
            }

            case 4: {
                comma_num =5;
                R5[0] = str[i + 1];
                R5[1] = str[i + 2];
                R5[2] = str[i + 3];
                R5[3] = str[i + 4];
                break;
            }

            case 5: {
                comma_num = 0;
                R6[0] = str[i + 1];
                R6[1] = str[i + 2];
                R6[2] = str[i + 3];
                R6[3] = str[i + 4];
                break;
            }

            }
        } else
            continue;
    }
}


// 串口3接收到的消息
void usart3_data_analysis(void) {
    u16 t=0;
    u16 len=0;
    uint8_t REMOVE_RX_BUF[USART3_RX_LEN];  //串口数据缓存数组
    if(USART3_RX_STA&0x8000) {
        len=USART3_RX_STA&0x3FFF;   //得到此次接收到的数据长度
        printf("Receive Data OK\r\n");
        for(t=0; t<len; t++) {
            REMOVE_RX_BUF[t] = USART3_RX_BUF[t];
        }
        REMOVE_RX_BUF[len] = 0x0d;
        REMOVE_RX_BUF[len+1] = 0x0a;
        if(SD_Initialize() == 0) {
            printf("Test_f_writefile OK!!!\r\n");
            rmove_data_num += strlen((char *)REMOVE_RX_BUF);
            Test_f_writefile(ftmp,(char *)REMOVE_RX_BUF,rmove_data_num,len+2);
        } else {
            printf("SD Card Failed! Please Check!\r\n");
        }
        USART3_RX_STA=0;
    } else {
        if(times == 25) {
            if(SD_Initialize() != 0) {
                printf("SD Card Failed!\r\n");
                printf("Please Check!\r\n");
            }
            times=0;
        }
        times++;
        delay_ms(20);
    }

}



















